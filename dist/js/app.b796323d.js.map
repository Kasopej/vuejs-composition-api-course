{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?264d","webpack:///./src/components/Signup.vue?bf48","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/components/Signin.vue?3f58","webpack:///./src/components/PostWriter.vue?c4d4","webpack:///./src/App.vue","webpack:///./src/components/Navbar.vue","webpack:///./src/components/Signup.vue","webpack:///./src/components/FormInput.vue","webpack:///./src/components/FormInput.vue?113a","webpack:///./src/components/FormInput.vue?4d7a","webpack:///./src/validation.ts","webpack:///./src/store.ts","webpack:///./src/useModal.ts","webpack:///./src/components/Signup.vue?921c","webpack:///./src/components/Signup.vue?0293","webpack:///./src/components/Signin.vue","webpack:///./src/components/Signin.vue?fb37","webpack:///./src/components/Signin.vue?53f1","webpack:///./src/components/Navbar.vue?f23b","webpack:///./src/components/Navbar.vue?0924","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?eabf","webpack:///./src/data/vue-reactivity-md.txt","webpack:///./src/data/vue-reactivity-html.txt","webpack:///./src/data/renderer-md.txt","webpack:///./src/data/renderer-html.txt","webpack:///./src/data/pipeline-md.txt","webpack:///./src/data/pipeline-html.txt","webpack:///./src/data/store-md.txt","webpack:///./src/data/store-html.txt","webpack:///./src/data/cypress-md.txt","webpack:///./src/data/cypress-html.txt","webpack:///./src/mocks.ts","webpack:///./src/components/Home.vue","webpack:///./src/components/Timeline.vue","webpack:///./src/components/TimelinePost.vue","webpack:///./src/components/TimelinePost.vue?5452","webpack:///./src/components/TimelinePost.vue?b86e","webpack:///./src/components/Timeline.vue?d174","webpack:///./src/components/Timeline.vue?fd63","webpack:///./src/components/Spinner.vue","webpack:///./src/components/Spinner.vue?14b1","webpack:///./src/components/Home.vue?03f1","webpack:///./src/components/Home.vue?1f51","webpack:///./src/components/NewPost.vue","webpack:///./src/components/PostWriter.vue","webpack:///./src/components/PostWriter.vue?6b8c","webpack:///./src/components/PostWriter.vue?6dc2","webpack:///./src/components/NewPost.vue?5b01","webpack:///./src/components/NewPost.vue?218a","webpack:///./src/components/ShowPost.vue","webpack:///./src/components/PostViewer.vue","webpack:///./src/components/PostViewer.vue?2d2d","webpack:///./src/components/PostViewer.vue?dd83","webpack:///./src/components/ShowPost.vue?dd89","webpack:///./src/components/ShowPost.vue?8344","webpack:///./src/components/EditPost.vue","webpack:///./src/components/PostEditor.vue","webpack:///./src/components/PostEditor.vue?cb6f","webpack:///./src/components/PostEditor.vue?8b8f","webpack:///./src/components/EditPost.vue?026b","webpack:///./src/components/EditPost.vue?ba00","webpack:///./src/router.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","class","href","style","hide","to","signOut","data-test","signUp","signIn","component","submit","username","type","error","usernameStatus","message","password","passwordStatus","disabled","valid","modelValue","handleInput","props","String","required","default","ctx","emit","target","render","options","validate","validators","validator","min","max","storeKey","initial","this","state","app","provide","post","response","a","posts","all","set","ids","put","user","authors","currentUserId","console","log","postsState","Map","loaded","undefined","useStore","_store","getState","show","useModal","showModal","hideModal","components","FormInput","store","modal","async","evt","newUser","createUser","__scopeId","Signup","router","auth","Signin","Navbar","display","today","title","created","subtract","authorId","thisWeek","thisMonth","demoData","markdown","html","fallback","currentPeriod","toLowerCase","periods","period","setPeriod","format","TimelinePost","fetchPosts","allPosts","reduce","acc","thePost","concat","filter","isAfter","script","Timeline","Spinner","newPost","save","contenteditable","ref","emits","content","parseHtml","str","gfm","breaks","highlight","highlightAuto","newVal","immediate","contentEditable","innerText","PostWriter","createPost","params","canEdit","PostViewer","updatePost","PostEditor","routerWithStore","history","routes","path","Home","EditPost","meta","requiresAuth","ShowPost","NewPost","beforeEach","from","next","delay","Promise","res","setTimeout","url","payload","toString","author","App","use","mount"],"mappings":"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OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,UAAW,OACX,aAAc,OACd,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,aAAc,OACd,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,OAAQ,OACR,UAAW,OACX,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","file":"js/app.b796323d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vuejs-composition-api-course/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=65733998&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Signup.vue?vue&type=style&index=0&id=44253169&scoped=true&lang=css\"","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Signin.vue?vue&type=style&index=0&id=03e5fcd1&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PostWriter.vue?vue&type=style&index=0&id=575f6bb7&lang=css\"","<template>\r\n  <div class=\"modal\" :style=\"style\">\r\n    <div class=\"modal-background\"></div>\r\n    <div class=\"modal-content\">\r\n      <div id=\"modal\">\r\n\r\n      </div>\r\n    </div>\r\n    <button \r\n      @click=\"hide\"\r\n      class=\"modal-close is-large\">\r\n    </button>\r\n  </div>\r\n\r\n  <section class=\"section\">\r\n    <div class=\"container\">\r\n      <div class=\"notification is-info is-size-3\">\r\n        <p>\r\n          Learn to build this application with Vue.js 3, the Composition API, TypeScript, Vue Router and Vue Test Utils!\r\n        </p>\r\n        <p>\r\n          <a href=\"https://gum.co/vuejs-composition-api\">Get it on Gumroad.</a> 👈🏼 20% off with <b>VUE_SHARE_THE_LOVE</b> 🎉.\r\n        </p>\r\n      </div>\r\n      <navbar />\r\n      <router-view />\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, ref } from 'vue';\r\nimport Navbar from './components/Navbar.vue'\r\nimport FormInput from './components/FormInput.vue'\r\nimport { useModal } from './useModal'\r\n\r\nexport default defineComponent({\r\n  name: 'App',\r\n  components: {\r\n    Navbar,\r\n    FormInput\r\n  },\r\n\r\n  setup() {\r\n    const modal = useModal()\r\n\r\n    const style = computed(() => {\r\n      return {\r\n        display: modal.show.value ? 'block' : 'none'\r\n      }\r\n    })\r\n\r\n    return {\r\n      style,\r\n      hide: () => {\r\n        modal.hideModal()\r\n      }\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"navbar\">\r\n    <div class=\"navbar-end\">\r\n      <div \r\n        class=\"buttons\"\r\n        v-if=\"auth\"\r\n      >\r\n        <router-link \r\n          class=\"button\"\r\n          to=\"/posts/new\"\r\n        >\r\n          New Post\r\n        </router-link>\r\n\r\n        <button\r\n          class=\"button\"\r\n          @click=\"signOut\"\r\n        >\r\n          Sign Out\r\n        </button>\r\n      </div>\r\n\r\n      <div \r\n        class=\"buttons\"\r\n        v-else\r\n      >\r\n        <button\r\n          class=\"button\"\r\n          data-test=\"sign-up\"\r\n          @click=\"signUp\"\r\n        >\r\n          Sign Up\r\n        </button>\r\n\r\n        <button\r\n          class=\"button\"\r\n          @click=\"signIn\"\r\n        >\r\n          Sign In\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <teleport to=\"#modal\">\r\n    <component :is=\"component\" />\r\n  </teleport>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, h, markRaw } from 'vue';\r\nimport { useRouter } from 'vue-router'\r\nimport Signup from './Signup.vue'\r\nimport Signin from './Signin.vue'\r\nimport { useModal } from '../useModal'\r\nimport { useStore } from '../store'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Signup\r\n  },\r\n\r\n  setup() {\r\n    const modal = useModal()\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    const auth = computed(() => {\r\n      return !!store.getState().authors.currentUserId\r\n    })\r\n\r\n    const signIn = () => {\r\n      modal.component.value = markRaw(Signin)\r\n      modal.showModal()\r\n    }\r\n\r\n    const signUp = () => {\r\n      modal.component.value = markRaw(Signup)\r\n      modal.showModal()\r\n    }\r\n\r\n    const signOut = () => {\r\n      store.signOut() \r\n      router.push('/')\r\n    }\r\n\r\n    return {\r\n      component: modal.component,\r\n      signIn,\r\n      signUp,\r\n      signOut,\r\n      auth,\r\n    }\r\n  }\r\n});\r\n</script>","<template>\r\n  <form @submit.prevent=\"submit\">\r\n    <form-input \r\n      v-model=\"username\" \r\n      name=\"Username\"\r\n      type=\"text\"\r\n      :error=\"usernameStatus.message\"\r\n    />\r\n\r\n    <form-input \r\n      v-model=\"password\" \r\n      name=\"Password\"\r\n      type=\"password\"\r\n      :error=\"passwordStatus.message\"\r\n    />\r\n\r\n    <button\r\n      class=\"button is-primary\"\r\n      :disabled=\"!usernameStatus.valid || !passwordStatus.valid\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, ref } from 'vue';\r\nimport FormInput from './FormInput.vue'\r\nimport { required, length, Status, validate } from '../validation'\r\nimport { User, useStore } from '../store';\r\nimport { useModal } from '../useModal';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    FormInput\r\n  },\r\n\r\n  setup() {\r\n    const username = ref('username')\r\n    const usernameStatus = computed<Status>(() => {\r\n      return validate(username.value, [required(), length({ min: 5, max: 10 })])\r\n    })\r\n\r\n    const password = ref('password')\r\n    const passwordStatus = computed<Status>(() => {\r\n      return validate(password.value, [required(), length({ min: 10, max: 40 })])\r\n    })\r\n\r\n    const store = useStore()\r\n    const modal = useModal()\r\n\r\n    const submit = async (evt: Event) => {\r\n      if (!usernameStatus.value.valid ||\r\n        !passwordStatus.value.valid\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const newUser: User = {\r\n        id: '-1',\r\n        username: username.value,\r\n        password: password.value,\r\n      }\r\n\r\n      await store.createUser(newUser)\r\n      modal.hideModal()\r\n    }\r\n\r\n    return {\r\n      usernameStatus,\r\n      username,\r\n      submit,\r\n      password,\r\n      passwordStatus\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  padding: 15px;\r\n  background: white;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"field\">\r\n    <label class=\"label\" :name=\"name\">{{ name }}</label>\r\n    <div class=\"control\">\r\n      <input \r\n        class=\"input\" \r\n        :id=\"name\"\r\n        :type=\"type\" \r\n        :value=\"modelValue\" \r\n        @input=\"handleInput\"\r\n      />\r\n    </div>\r\n    <p class=\"is-danger help\">{{ error }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'text'\r\n    },\r\n    modelValue: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    error: {\r\n      type: String,\r\n    }\r\n  },\r\n  setup (props, ctx) {\r\n    const handleInput = (e: Event) => {\r\n      ctx.emit('update:modelValue', (e.target as HTMLInputElement).value)\r\n    }\r\n\r\n    return {\r\n      handleInput\r\n    }\r\n  }\r\n})\r\n</script>","\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'text'\r\n    },\r\n    modelValue: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    error: {\r\n      type: String,\r\n    }\r\n  },\r\n  setup (props, ctx) {\r\n    const handleInput = (e: Event) => {\r\n      ctx.emit('update:modelValue', (e.target as HTMLInputElement).value)\r\n    }\r\n\r\n    return {\r\n      handleInput\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./FormInput.vue?vue&type=template&id=d1012d8c\"\nimport script from \"./FormInput.vue?vue&type=script&lang=ts\"\nexport * from \"./FormInput.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","interface Rule {\r\n  type: 'required' | 'length'\r\n}\r\n\r\ninterface Require extends Rule {\r\n  type: 'required'\r\n}\r\n\r\ninterface LengthOptions {\r\n  min: number\r\n  max: number\r\n}\r\n\r\ninterface Length extends Rule {\r\n  type: 'length'\r\n  options: LengthOptions\r\n}\r\n\r\nexport function required(): Require {\r\n  return {\r\n    type: 'required'\r\n  }\r\n}\r\n\r\nexport function length(options: LengthOptions): Length {\r\n  return {\r\n    type: 'length',\r\n    options\r\n  }\r\n}\r\n\r\nexport interface Status {\r\n  valid: boolean\r\n  message?: string\r\n}\r\n\r\ntype Validator = Require | Length\r\n\r\nexport function validate(value: string | undefined, validators: Validator[]): Status {\r\n  for (const validator of validators) {\r\n    if (validator.type === 'required') {\r\n      if (!value || value.length === 0) {\r\n        return {\r\n          valid: false,\r\n          message: 'This value is required.'\r\n        }\r\n      }\r\n    }\r\n\r\n    if (validator.type === 'length') {\r\n      if (\r\n        value!.length < validator.options.min || value!.length > validator.options.max \r\n      ) {\r\n        return {\r\n          valid: false,\r\n          message: `The value must be between ${validator.options.min} and ${validator.options.max}`\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    valid: true\r\n  }\r\n}\r\n\r\n// const result =  validate('username', [required()]) {\r\n//   return {\r\n//     valid \r\n//     message:\r\n//   }\r\n// }","import { reactive, readonly, provide, inject, App } from 'vue'\r\nimport axios from 'axios'\r\nimport { Post, today, thisWeek, thisMonth } from './mocks'\r\n\r\nexport interface User {\r\n  id: string\r\n  username: string\r\n  password: string\r\n}\r\n\r\nexport type Author = Omit<User, 'password'>\r\n\r\ninterface BaseState<T> {\r\n  // o(n)\r\n  ids: string[] // [1, 2, 3, 4]\r\n\r\n  // o(1)\r\n  all: Map<string, T>\r\n\r\n  loaded: boolean\r\n}\r\n\r\ntype PostsState = BaseState<Post>\r\ninterface AuthorsState extends BaseState<Author> {\r\n  currentUserId: string | undefined\r\n}\r\n\r\nexport interface State {\r\n  authors: AuthorsState\r\n  posts: PostsState\r\n}\r\n\r\nexport const storeKey = Symbol('store')\r\n\r\nexport class Store {\r\n  private state: State\r\n\r\n  constructor(initial: State) {\r\n    this.state = reactive(initial)\r\n  }\r\n\r\n  install(app: App) {\r\n    app.provide(storeKey, this)\r\n  }\r\n\r\n  getState() {\r\n    return readonly(this.state)\r\n  }\r\n\r\n  async createPost(post: Post) {\r\n    const response = await axios.post<Post>('/posts', post)\r\n    this.state.posts.all.set(response.data.id, response.data)\r\n    this.state.posts.ids.push(response.data.id)\r\n  }\r\n\r\n  async updatePost(post: Post) {\r\n    const response = await axios.put<Post>('/posts', post)\r\n    this.state.posts.all.set(response.data.id, response.data)\r\n  }\r\n\r\n  async createUser(user: User) {\r\n    const response = await axios.post<Author>('/users', user)\r\n    this.state.authors.all.set(response.data.id, response.data)\r\n    this.state.authors.ids.push(response.data.id)\r\n    this.state.authors.currentUserId = response.data.id\r\n    console.log(this.state.authors)\r\n  }\r\n\r\n  async signIn(user: User) {\r\n    // hard code test user as id: 1\r\n    const response = await axios.post<Author>('/sign_in', user)\r\n    this.state.authors.all.set('1', response.data)\r\n    this.state.authors.ids.push('1')\r\n    this.state.authors.currentUserId = '1'\r\n  }\r\n\r\n  async fetchPosts() {\r\n    const response = await axios.get<Post[]>('/posts')\r\n    const postsState: PostsState = {\r\n      ids: [],\r\n      all: new Map,\r\n      loaded: true\r\n    }\r\n\r\n    for (const post of response.data) {\r\n      postsState.ids.push(post.id)\r\n      postsState.all.set(post.id, post)\r\n    }\r\n\r\n    this.state.posts = postsState\r\n  }\r\n\r\n  signOut() {\r\n    this.state.authors.currentUserId = undefined\r\n  }\r\n}\r\n\r\nconst all = new Map<string, Post>()\r\n\r\nexport const store = new Store({\r\n  authors: {\r\n    all: new Map<string, Author>(),\r\n    ids: [],\r\n    loaded: false,\r\n    currentUserId: '1'\r\n  },\r\n  posts: {\r\n    all,\r\n    ids: [],\r\n    loaded: false\r\n  }\r\n})\r\n\r\n// use\r\n// composables\r\n// provide inject\r\nexport function useStore(): Store {\r\n  const _store = inject<Store>(storeKey)\r\n  if (!_store) {\r\n    throw Error('Did you forgot to call provide?')\r\n  }\r\n\r\n  return _store\r\n}\r\n\r\nstore.getState().posts.loaded","import { ref } from \"vue\";\r\n\r\nconst show = ref(false)\r\nconst component = ref()\r\n\r\nexport function useModal() {\r\n  return {\r\n    component,\r\n    show,\r\n    showModal: () => show.value = true,\r\n    hideModal: () => show.value = false,\r\n  }\r\n}\r\n","\r\nimport { computed, defineComponent, ref } from 'vue';\r\nimport FormInput from './FormInput.vue'\r\nimport { required, length, Status, validate } from '../validation'\r\nimport { User, useStore } from '../store';\r\nimport { useModal } from '../useModal';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    FormInput\r\n  },\r\n\r\n  setup() {\r\n    const username = ref('username')\r\n    const usernameStatus = computed<Status>(() => {\r\n      return validate(username.value, [required(), length({ min: 5, max: 10 })])\r\n    })\r\n\r\n    const password = ref('password')\r\n    const passwordStatus = computed<Status>(() => {\r\n      return validate(password.value, [required(), length({ min: 10, max: 40 })])\r\n    })\r\n\r\n    const store = useStore()\r\n    const modal = useModal()\r\n\r\n    const submit = async (evt: Event) => {\r\n      if (!usernameStatus.value.valid ||\r\n        !passwordStatus.value.valid\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const newUser: User = {\r\n        id: '-1',\r\n        username: username.value,\r\n        password: password.value,\r\n      }\r\n\r\n      await store.createUser(newUser)\r\n      modal.hideModal()\r\n    }\r\n\r\n    return {\r\n      usernameStatus,\r\n      username,\r\n      submit,\r\n      password,\r\n      passwordStatus\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./Signup.vue?vue&type=template&id=44253169&scoped=true\"\nimport script from \"./Signup.vue?vue&type=script&lang=ts\"\nexport * from \"./Signup.vue?vue&type=script&lang=ts\"\n\nimport \"./Signup.vue?vue&type=style&index=0&id=44253169&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-44253169\"\n\nexport default script","<template>\r\n  <form @submit.prevent=\"submit\">\r\n    <p>Test account is username: \"user123\", password: \"pass42\".</p>\r\n    <form-input \r\n      v-model=\"username\" \r\n      name=\"Username\"\r\n      type=\"text\"\r\n      :error=\"usernameStatus.message\"\r\n    />\r\n\r\n    <form-input \r\n      v-model=\"password\" \r\n      name=\"Password\"\r\n      type=\"password\"\r\n      :error=\"passwordStatus.message\"\r\n    />\r\n\r\n    <button\r\n      class=\"button is-primary\"\r\n      :disabled=\"!usernameStatus.valid || !passwordStatus.valid\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, ref } from 'vue';\r\nimport FormInput from './FormInput.vue'\r\nimport { required, length, Status, validate } from '../validation'\r\nimport { User, useStore } from '../store';\r\nimport { useModal } from '../useModal';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    FormInput\r\n  },\r\n\r\n  setup() {\r\n    const username = ref('')\r\n    const usernameStatus = computed<Status>(() => {\r\n      return validate(username.value, [required()])\r\n    })\r\n\r\n    const password = ref('')\r\n    const passwordStatus = computed<Status>(() => {\r\n      return validate(password.value, [required()])\r\n    })\r\n\r\n    const store = useStore()\r\n    const modal = useModal()\r\n\r\n    const submit = async (evt: Event) => {\r\n      if (!usernameStatus.value.valid ||\r\n        !passwordStatus.value.valid\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const user: User = {\r\n        id: '-1',\r\n        username: username.value,\r\n        password: password.value,\r\n      }\r\n\r\n      await store.signIn(user)\r\n      modal.hideModal()\r\n    }\r\n\r\n    return {\r\n      usernameStatus,\r\n      username,\r\n      submit,\r\n      password,\r\n      passwordStatus\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  padding: 15px;\r\n  background: white;\r\n}\r\n</style>\r\n","\r\nimport { computed, defineComponent, ref } from 'vue';\r\nimport FormInput from './FormInput.vue'\r\nimport { required, length, Status, validate } from '../validation'\r\nimport { User, useStore } from '../store';\r\nimport { useModal } from '../useModal';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    FormInput\r\n  },\r\n\r\n  setup() {\r\n    const username = ref('')\r\n    const usernameStatus = computed<Status>(() => {\r\n      return validate(username.value, [required()])\r\n    })\r\n\r\n    const password = ref('')\r\n    const passwordStatus = computed<Status>(() => {\r\n      return validate(password.value, [required()])\r\n    })\r\n\r\n    const store = useStore()\r\n    const modal = useModal()\r\n\r\n    const submit = async (evt: Event) => {\r\n      if (!usernameStatus.value.valid ||\r\n        !passwordStatus.value.valid\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const user: User = {\r\n        id: '-1',\r\n        username: username.value,\r\n        password: password.value,\r\n      }\r\n\r\n      await store.signIn(user)\r\n      modal.hideModal()\r\n    }\r\n\r\n    return {\r\n      usernameStatus,\r\n      username,\r\n      submit,\r\n      password,\r\n      passwordStatus\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./Signin.vue?vue&type=template&id=03e5fcd1&scoped=true\"\nimport script from \"./Signin.vue?vue&type=script&lang=ts\"\nexport * from \"./Signin.vue?vue&type=script&lang=ts\"\n\nimport \"./Signin.vue?vue&type=style&index=0&id=03e5fcd1&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-03e5fcd1\"\n\nexport default script","\r\nimport { computed, defineComponent, h, markRaw } from 'vue';\r\nimport { useRouter } from 'vue-router'\r\nimport Signup from './Signup.vue'\r\nimport Signin from './Signin.vue'\r\nimport { useModal } from '../useModal'\r\nimport { useStore } from '../store'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Signup\r\n  },\r\n\r\n  setup() {\r\n    const modal = useModal()\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    const auth = computed(() => {\r\n      return !!store.getState().authors.currentUserId\r\n    })\r\n\r\n    const signIn = () => {\r\n      modal.component.value = markRaw(Signin)\r\n      modal.showModal()\r\n    }\r\n\r\n    const signUp = () => {\r\n      modal.component.value = markRaw(Signup)\r\n      modal.showModal()\r\n    }\r\n\r\n    const signOut = () => {\r\n      store.signOut() \r\n      router.push('/')\r\n    }\r\n\r\n    return {\r\n      component: modal.component,\r\n      signIn,\r\n      signUp,\r\n      signOut,\r\n      auth,\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./Navbar.vue?vue&type=template&id=69048ad6\"\nimport script from \"./Navbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Navbar.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { computed, defineComponent, ref } from 'vue';\r\nimport Navbar from './components/Navbar.vue'\r\nimport FormInput from './components/FormInput.vue'\r\nimport { useModal } from './useModal'\r\n\r\nexport default defineComponent({\r\n  name: 'App',\r\n  components: {\r\n    Navbar,\r\n    FormInput\r\n  },\r\n\r\n  setup() {\r\n    const modal = useModal()\r\n\r\n    const style = computed(() => {\r\n      return {\r\n        display: modal.show.value ? 'block' : 'none'\r\n      }\r\n    })\r\n\r\n    return {\r\n      style,\r\n      hide: () => {\r\n        modal.hideModal()\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./App.vue?vue&type=template&id=65733998\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=65733998&lang=css\"\nscript.render = render\n\nexport default script","export default \"Vue 3 has a super neat reactivity system based on the ES6 [Proxy](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy) object. In this article we build a simplified version of the reactivity system. We will stay as close the [Vue 3 source code](https://github.com/vuejs/vue-next/tree/master/packages/reactivity) as possible. The idea is to prepare you better to read and understand it.\\r\\n\\r\\nThe source code repository is for this article is exclusive to my [GitHub Sponsors](https://github.com/sponsors/lmiller1990).\\r\\n\\r\\nBy the end of this article, you'll be in a position to read through Vue's `reactivity` package and have a general understand of what's going on under the hood.\\r\\n\\r\\nAs we work through our implementation, we will compare what we have written to the actual source code and see what's different, and why.\\r\\n\\r\\nThe initial goal will be the following:\\r\\n\\r\\n```ts\\r\\ntest('ref', () => {\\r\\n  const fooref = ref('foo')\\r\\n  let foo\\r\\n  effect(() => {\\r\\n    foo = fooref.value\\r\\n  })\\r\\n  foo //=> 'foo'\\r\\n  expect(foo).toBe('foo')\\r\\n  fooref.value = 'bar'\\r\\n  expect(foo).toBe('bar') // foo is now 'bar' via reactivity!\\r\\n})\\r\\n```\\r\\n\\r\\nThe implementation will scale to something a (little) more interesting, too:\\r\\n\\r\\n```ts\\r\\ntest('multiple refs', () => {\\r\\n  const fooref = ref('')\\r\\n  const barref = ref('')\\r\\n  let foo\\r\\n  let foobar\\r\\n\\r\\n  effect(() => {\\r\\n    foo = fooref.value\\r\\n    foobar = fooref.value + barref.value\\r\\n  })\\r\\n\\r\\n  expect(foo).toBe('')\\r\\n  expect(foobar).toBe('')\\r\\n\\r\\n  fooref.value = 'foo'\\r\\n  expect(foo).toBe('foo')\\r\\n  expect(foobar).toBe('foo')\\r\\n\\r\\n  barref.value = 'bar'\\r\\n  expect(foo).toBe('foo')\\r\\n  expect(foobar).toBe('foobar')\\r\\n})\\r\\n```\\r\\n\\r\\nIf you have used Vue with the Composition API, you will be familiar with `ref`. You may not have seen `effect` - that's because it's not actually exposed to the end user. What you will be familiar with is `watch`, `watchEffect` and `computed` - the idea is more or less the same. All of these, as well as Vue's reactivity APIs, are powered by `effect` under the hood. Since we are doing everything from scratch, we will need to implement `effect` before implementing the rest.\\r\\n\\r\\nWrapping something in `effect` sets up reactivity. Take this snippet:\\r\\n\\r\\n```ts\\r\\nconst fooref = ref('foo')\\r\\nlet foo\\r\\neffect(() => {\\r\\n  foo = fooref.value\\r\\n})\\r\\nfooref.value = 'bar'\\r\\nconsole.log(foo) // now it's 'bar' via reactivity!\\r\\n```\\r\\n\\r\\nBy wrapping `foo = fooref.value` in `effect`, we are saying that the value of `foo` depends on the value of `fooref.value`. Now, any time that `fooref.value` changes, the `effect` will be executed and `foo` will also be updated.\\r\\n\";","export default \"<p>Vue 3 has a super neat reactivity system based on the ES6 <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\\\">Proxy</a> object. In this article we build a simplified version of the reactivity system. We will stay as close the <a href=\\\"https://github.com/vuejs/vue-next/tree/master/packages/reactivity\\\">Vue 3 source code</a> as possible. The idea is to prepare you better to read and understand it.</p>\\r\\n<p>The source code repository is for this article is exclusive to my <a href=\\\"https://github.com/sponsors/lmiller1990\\\">GitHub Sponsors</a>.</p>\\r\\n<p>By the end of this article, you&#39;ll be in a position to read through Vue&#39;s <code>reactivity</code> package and have a general understand of what&#39;s going on under the hood.</p>\\r\\n<p>As we work through our implementation, we will compare what we have written to the actual source code and see what&#39;s different, and why.</p>\\r\\n<p>The initial goal will be the following:</p>\\r\\n<pre><code class=\\\"language-ts\\\">test(&#x27;ref&#x27;, () =&gt; {\\r\\n  const fooref = ref(&#x27;foo&#x27;)\\r\\n  let foo\\r\\n  effect(() =&gt; {\\r\\n    foo = fooref.value\\r\\n  })\\r\\n  foo //=&gt; &#x27;foo&#x27;\\r\\n  expect(<span class=\\\"hljs-name\\\">foo</span>).toBe(&#x27;foo&#x27;)\\r\\n  fooref.value = &#x27;bar&#x27;\\r\\n  expect(<span class=\\\"hljs-name\\\">foo</span>).toBe(&#x27;bar&#x27;) // foo is now &#x27;bar&#x27; via reactivity!\\r\\n})\\r\\n</code></pre>\\r\\n<p>The implementation will scale to something a (little) more interesting, too:</p>\\r\\n<pre><code class=\\\"language-ts\\\">test(&#x27;multiple refs&#x27;, () =&gt; {\\r\\n  const fooref = ref(&#x27;&#x27;)\\r\\n  const barref = ref(&#x27;&#x27;)\\r\\n  let foo\\r\\n  let foobar\\r\\n\\r\\n  effect(() =&gt; {\\r\\n    foo = fooref.value\\r\\n    foobar = fooref.value + barref.value\\r\\n  })\\r\\n\\r\\n  expect(<span class=\\\"hljs-name\\\">foo</span>).toBe(&#x27;&#x27;)\\r\\n  expect(<span class=\\\"hljs-name\\\">foobar</span>).toBe(&#x27;&#x27;)\\r\\n\\r\\n  fooref.value = &#x27;foo&#x27;\\r\\n  expect(<span class=\\\"hljs-name\\\">foo</span>).toBe(&#x27;foo&#x27;)\\r\\n  expect(<span class=\\\"hljs-name\\\">foobar</span>).toBe(&#x27;foo&#x27;)\\r\\n\\r\\n  barref.value = &#x27;bar&#x27;\\r\\n  expect(<span class=\\\"hljs-name\\\">foo</span>).toBe(&#x27;foo&#x27;)\\r\\n  expect(<span class=\\\"hljs-name\\\">foobar</span>).toBe(&#x27;foobar&#x27;)\\r\\n})\\r\\n</code></pre>\\r\\n<p>If you have used Vue with the Composition API, you will be familiar with <code>ref</code>. You may not have seen <code>effect</code> - that&#39;s because it&#39;s not actually exposed to the end user. What you will be familiar with is <code>watch</code>, <code>watchEffect</code> and <code>computed</code> - the idea is more or less the same. All of these, as well as Vue&#39;s reactivity APIs, are powered by <code>effect</code> under the hood. Since we are doing everything from scratch, we will need to implement <code>effect</code> before implementing the rest.</p>\\r\\n<p>Wrapping something in <code>effect</code> sets up reactivity. Take this snippet:</p>\\r\\n<pre><code class=\\\"language-ts\\\">const fooref = ref(<span class=\\\"hljs-string\\\">&#x27;foo&#x27;</span>)\\r\\nlet foo\\r\\n<span class=\\\"hljs-function\\\"><span class=\\\"hljs-title\\\">effect</span><span class=\\\"hljs-params\\\">(()</span></span> =&gt; {\\r\\n  foo = fooref<span class=\\\"hljs-selector-class\\\">.value</span>\\r\\n})\\r\\nfooref<span class=\\\"hljs-selector-class\\\">.value</span> = <span class=\\\"hljs-string\\\">&#x27;bar&#x27;</span>\\r\\nconsole<span class=\\\"hljs-selector-class\\\">.log</span>(foo) <span class=\\\"hljs-comment\\\">// now it&#x27;s &#x27;bar&#x27; via reactivity!</span>\\r\\n</code></pre>\\r\\n<p>By wrapping <code>foo = fooref.value</code> in <code>effect</code>, we are saying that the value of <code>foo</code> depends on the value of <code>fooref.value</code>. Now, any time that <code>fooref.value</code> changes, the <code>effect</code> will be executed and <code>foo</code> will also be updated.</p>\";","export default \"Among many other cool features, Vue.js 3 is much more modular than Vue.js 3. The project is consists of [many different packages](https://github.com/vuejs/vue-next), making it even more flexible and customizable.\\r\\n\\r\\nOne of the more interesting architectural changes is the decoupled renderer and runtime. This makes it much easier to build custom renderers.\\r\\n\\r\\n## What is a Custom Renderer?\\r\\n\\r\\nVue consists of several \\\"systems\\\". There is the reactivity system, it's custom component system, a virtual DOM, and several others. A renderer is what takes the output of the virtual DOM and *renders* it using some UI layer. [The DOM renderer](https://github.com/vuejs/vue-next/tree/master/packages/runtime-dom) (the only one that ships with Vue) could be considered only official renderer, and as such, the reference renderer. \\r\\n\\r\\nSo, a custom renderer is renderer that targets anything other than the DOM.\\r\\n\\r\\nThe official DOM renderer can also be considered the best resource to learn to build a custom renderer - if you want to write one, you will become very well acquainted with it, since there are not many other resources on building a Vue 3 renderer.\\r\\n\\r\\n## Existing Literature\\r\\n\\r\\nThe main resources I used when preparing this post were:\\r\\n\\r\\n- [Vuminal](https://github.com/ycmjason/vuminal). A terminal renderer. It's source code is overly modular and kind of difficult to navigate, and I couldn't get it to do anything much more than the basic counter example in the README.\\r\\n- [Vugel](https://github.com/Planning-nl/vugel), a WebGL renderer.\\r\\n- [Vue 3 DOM Renderer source](https://github.com/vuejs/vue-next/tree/master/packages/runtime-dom). This was the most useful resource by far.\\r\\n- [React PDF](https://react-pdf.org/). This is a custom PDF renderer for React. Not Vue, but the ideas apply, and the inspiration for this project.\\r\\n\";","export default \"<p>Among many other cool features, Vue.js 3 is much more modular than Vue.js 3. The project is consists of <a href=\\\"https://github.com/vuejs/vue-next\\\">many different packages</a>, making it even more flexible and customizable.</p>\\r\\n<p>One of the more interesting architectural changes is the decoupled renderer and runtime. This makes it much easier to build custom renderers.</p>\\r\\n<h2 id=\\\"what-is-a-custom-renderer\\\">What is a Custom Renderer?</h2>\\r\\n<p>Vue consists of several &quot;systems&quot;. There is the reactivity system, it&#39;s custom component system, a virtual DOM, and several others. A renderer is what takes the output of the virtual DOM and <em>renders</em> it using some UI layer. <a href=\\\"https://github.com/vuejs/vue-next/tree/master/packages/runtime-dom\\\">The DOM renderer</a> (the only one that ships with Vue) could be considered only official renderer, and as such, the reference renderer. </p>\\r\\n<p>So, a custom renderer is renderer that targets anything other than the DOM.</p>\\r\\n<p>The official DOM renderer can also be considered the best resource to learn to build a custom renderer - if you want to write one, you will become very well acquainted with it, since there are not many other resources on building a Vue 3 renderer.</p>\\r\\n<h2 id=\\\"existing-literature\\\">Existing Literature</h2>\\r\\n<p>The main resources I used when preparing this post were:</p>\\r\\n<ul>\\r\\n<li><a href=\\\"https://github.com/ycmjason/vuminal\\\">Vuminal</a>. A terminal renderer. It&#39;s source code is overly modular and kind of difficult to navigate, and I couldn&#39;t get it to do anything much more than the basic counter example in the README.</li>\\r\\n<li><a href=\\\"https://github.com/Planning-nl/vugel\\\">Vugel</a>, a WebGL renderer.</li>\\r\\n<li><a href=\\\"https://github.com/vuejs/vue-next/tree/master/packages/runtime-dom\\\">Vue 3 DOM Renderer source</a>. This was the most useful resource by far.</li>\\r\\n<li><a href=\\\"https://react-pdf.org/\\\">React PDF</a>. This is a custom PDF renderer for React. Not Vue, but the ideas apply, and the inspiration for this project.</li>\\r\\n</ul>\";","export default \"Welcome to the future. Check out this snippet from a popular web programming language that's gaining traction - it's a functional programming language where all values are immutable:\\r\\n\\r\\n```js\\r\\nconst sanitized = input\\r\\n  |> Str.split(?, ',')\\r\\n  |> Arr.map(?, toNumber)\\r\\n```\\r\\n\\r\\nAs you can see it has a number operators like `|>` (pipeline) and `?` (partial application).\\r\\n\\r\\nWhat year is it, and language are you coding in, you ask? The year is 2021 - and the language is *JavaScript*!\\r\\n\\r\\nYou can watch a video version of this post on my [Youtube channel](https://youtube.com/c/LachlanMiller).\\r\\n\\r\\n## What is `|>`? Introducing the Pipeline Operator\\r\\n\\r\\nMany functional language have a *pipeline* operator. Examples include Elm:\\r\\n\\r\\n```elm\\r\\n\\\"Hello everyone\\\" \\r\\n  |> left 5 \\r\\n  |> toLower \\r\\n  |> append \\\"I say \\\" -- \\\"I say hello\\\"\\r\\n```\\r\\n\\r\\nElixir:\\r\\n\\r\\n```elm\\r\\n\\\"Elixir rocks\\\"\\r\\n  |> String.upcase() \\r\\n  |> String.split()\\r\\n#=> [\\\"ELIXIR\\\", \\\"ROCKS\\\"]\\r\\n```\\r\\n\\r\\nF#\\r\\n\\r\\n```fsharp\\r\\nlet finalSeq = \\r\\n    seq { 0..10 }\\r\\n    |> Seq.filter (fun c -> (c % 2) = 0)\\r\\n    |> Seq.map ((*) 2)\\r\\n    |> Seq.map (sprintf \\\"The value is %i.\\\")\\r\\n```\\r\\n\\r\\nYou see the syntax - lots of `|>` which let you modify data in some way. Why is this a useful feature, and why would we want it in JavaScript? Pipelines make it easy to *chain functions together*. \\r\\n\";","export default \"<p>Welcome to the future. Check out this snippet from a popular web programming language that&#39;s gaining traction - it&#39;s a functional programming language where all values are immutable:</p>\\r\\n<pre><code class=\\\"language-js\\\">const sanitized = <span class=\\\"hljs-built_in\\\">input</span>\\r\\n  |&gt; Str.<span class=\\\"hljs-keyword\\\">split</span>(?, <span class=\\\"hljs-string\\\">&#x27;,&#x27;</span>)\\r\\n  |&gt; Arr.<span class=\\\"hljs-keyword\\\">map</span>(?, toNumber)\\r\\n</code></pre>\\r\\n<p>As you can see it has a number operators like <code>|&gt;</code> (pipeline) and <code>?</code> (partial application).</p>\\r\\n<p>What year is it, and language are you coding in, you ask? The year is 2021 - and the language is <em>JavaScript</em>!</p>\\r\\n<p>You can watch a video version of this post on my <a href=\\\"https://youtube.com/c/LachlanMiller\\\">Youtube channel</a>.</p>\\r\\n<h2 id=\\\"what-is--introducing-the-pipeline-operator\\\">What is <code>|&gt;</code>? Introducing the Pipeline Operator</h2>\\r\\n<p>Many functional language have a <em>pipeline</em> operator. Examples include Elm:</p>\\r\\n<pre><code class=\\\"language-elm\\\"><span class=\\\"hljs-string\\\">&quot;Hello everyone&quot;</span> \\r\\n  <span class=\\\"hljs-string\\\">|&gt; left 5 </span>\\r\\n  <span class=\\\"hljs-string\\\">|&gt; toLower </span>\\r\\n  <span class=\\\"hljs-string\\\">|&gt; append &quot;</span>I say <span class=\\\"hljs-string\\\">&quot; -- &quot;</span>I say hello<span class=\\\"hljs-string\\\">&quot;</span>\\r\\n</code></pre>\\r\\n<p>Elixir:</p>\\r\\n<pre><code class=\\\"language-elm\\\"><span class=\\\"hljs-string\\\">&quot;Elixir rocks&quot;</span>\\r\\n  |<span class=\\\"hljs-type\\\">&gt; String</span>.upcase() \\r\\n  |<span class=\\\"hljs-type\\\">&gt; String</span>.<span class=\\\"hljs-built_in\\\">split</span>()\\r\\n#=&gt; [<span class=\\\"hljs-string\\\">&quot;ELIXIR&quot;</span>, <span class=\\\"hljs-string\\\">&quot;ROCKS&quot;</span>]\\r\\n</code></pre>\\r\\n<p>F#</p>\\r\\n<pre><code class=\\\"language-fsharp\\\">let finalSeq = \\r\\n    se<span class=\\\"hljs-string\\\">q { 0..10 }</span>\\r\\n    |&gt; Seq.filter (fun c -&gt; (c % <span class=\\\"hljs-number\\\">2</span>) = <span class=\\\"hljs-number\\\">0</span>)\\r\\n    |&gt; Seq.map ((*) <span class=\\\"hljs-number\\\">2</span>)\\r\\n    |&gt; Seq.map (<span class=\\\"hljs-keyword\\\">sprintf</span> <span class=\\\"hljs-string\\\">&quot;The value is %i.&quot;</span>)\\r\\n</code></pre>\\r\\n<p>You see the syntax - lots of <code>|&gt;</code> which let you modify data in some way. Why is this a useful feature, and why would we want it in JavaScript? Pipelines make it easy to <em>chain functions together</em>. </p>\";","export default \"In this article we explore some advanced TypeScript while building a type safe store with a similar API to [Pinia](https://github.com/posva/pinia) or [Vuex 5](https://github.com/vuejs/rfcs/discussions/270) (which is still in the RFC stage). I learned a lot of what was needed to write this article by reading the [Pinia](https://github.com/posva/pinia/) source code.\\r\\n\\r\\nYou can find the source code [here](https://gist.github.com/lmiller1990/9ef32df8fb401e5f0482692ae974e6e0).\\r\\n\\r\\nThe goal will be a `defineStore` function that looks like this:\\r\\n\\r\\n```ts\\r\\nexport const useMainStore = defineStore({\\r\\n  state: {\\r\\n    counter: 0,\\r\\n  },\\r\\n  actions: {\\r\\n    inc(val: number = 1) {\\r\\n      this.state.counter += val\\r\\n    },\\r\\n  },\\r\\n});\\r\\n```\\r\\n\\r\\nThe store can then be used by simply calling `useMainStore()`:\\r\\n\\r\\n```html\\r\\n<template>\\r\\n  <p>Count is: {{ state.counter }}</p>\\r\\n  <button @click=\\\"click\\\">Inc</button>\\r\\n</template>\\r\\n\\r\\n<script lang=\\\"ts\\\">\\r\\nimport { computed } from 'vue'\\r\\nimport { useMainStore, useOtherStore } from './index2'\\r\\n\\r\\nexport default {\\r\\n  setup() {\\r\\n    const store = useMainStore()\\r\\n    return {\\r\\n      click: () => store.inc(),\\r\\n      state: store.state,\\r\\n    }\\r\\n  },\\r\\n}\\r\\n</script>\\r\\n```\\r\\n\\r\\nThe primary goal is to explore some advanced TypeScript types.\\r\\n\\r\\n## `defineStore`\\r\\n\\r\\nWe will start of with `defineStore`. It needs to be generic to be type safe - in this case, both the state and actions needs to be declared as generic parameters:\\r\\n\\r\\n```ts\\r\\nfunction defineStore<\\r\\n  S extends StateTree,\\r\\n  A extends Record<string, Method>\\r\\n>(options) {\\r\\n  // ...\\r\\n}\\r\\n```\\r\\n\\r\\nWe will also need a few utility types - `StateTree` and `Method`. `Method` is simple:\\r\\n\\r\\n```ts\\r\\ntype Method = (...args: any[]) => any;\\r\\n```\\r\\n\\r\\n`StateTree` isn't much more complex - it's basically typing a JavaScript object, where the key can be a `string`, `number` or `symbol`:\\r\\n\\r\\n```ts\\r\\nexport type StateTree = Record<string | number | symbol, any>;\\r\\n```\\r\\n\\r\\n## Typing the Store Options\\r\\n\\r\\n`defineStore` takes an object of options - `state` and `actions`. `state` is very easy to type - it's just `S`:\\r\\n\\r\\n```ts\\r\\nfunction defineStore<\\r\\n  S extends StateTree,\\r\\n  A extends Record<string, Method>\\r\\n>(options: {\\r\\n  state: S,\\r\\n}) {\\r\\n```\\r\\n\\r\\n`actions` is a bit more tricky. We know it's going to be a type of `A`, the second generic type passed to `defineStore`, but it also needs to have knowledge of `this`. Specifically, it needs to know that `this.state` exists, and `state` is a typed as `S`.\\r\\n\\r\\nThe way this is typed is using an intersection type (`&`) and [`ThisType`](https://www.typescriptlang.org/docs/handbook/utility-types.html#thistypetype). We need something similar to the example [in the docs](https://www.typescriptlang.org/docs/handbook/utility-types.html#thistypetype):\\r\\n\\r\\n```ts\\r\\nactions: A & ThisType<A & _STORE_WITH_STATE_>\\r\\n```\\r\\n\\r\\nWe just need to declare `_STORE_WITH_STATE_`. We could do it inline:\\r\\n\\r\\n```ts\\r\\nactions: A & ThisType<A & { state: S }>\\r\\n```\\r\\n\\r\\nPutting it all together:\\r\\n\\r\\n```ts\\r\\nexport type StateTree = Record<string | number | symbol, any>;\\r\\nfunction defineStore<\\r\\n  S extends StateTree,\\r\\n  A extends Record<string, Method>\\r\\n>(options: {\\r\\n  state: S,\\r\\n  actions: A & ThisType<A & { state: S }>\\r\\n}) {\\r\\n  // ...\\r\\n}\\r\\n```\\r\\n\\r\\nI'd like to add more features to the store later, so I am actually going to extract a type, `StoreWithState`:\\r\\n\\r\\n```ts\\r\\ntype StoreWithState<S extends StateTree> = {\\r\\n  state: S\\r\\n}\\r\\n\\r\\nexport type StateTree = Record<string | number | symbol, any>;\\r\\nfunction defineStore<\\r\\n  S extends StateTree,\\r\\n  A extends Record<string, Method>\\r\\n>(options: {\\r\\n  state: S,\\r\\n  actions: A & ThisType<A & StoreWithState<S>>\\r\\n}) {\\r\\n  // ...\\r\\n}\\r\\n```\\r\\n\\r\\nNow `this` in actions is typed! Let's move on to implementing the actual store.\\r\\n\\r\\n## Implementing `useStore` and Reactive State\\r\\n\\r\\nThe first thing we need is a store with a state property. Create that (`defineStore` is shown without the types for simplicity):\\r\\n\\r\\n```ts\\r\\nfunction defineStore(options) {\\r\\n  const initialStore = {\\r\\n    state: options.state || {}\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n`defineStore` should return a function. I will call it `useStore`, and it needs to return what we are going to type as `Store`:\\r\\n\\r\\n```ts\\r\\nfunction defineStore(options) {\\r\\n  const initialStore = {\\r\\n    state: options.state || {}\\r\\n  }\\r\\n\\r\\n  return function useStore(): Store<S, A> {\\r\\n    // ...\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nTyping `Store` is a bit tricky. It needs to expose a `state` property, as well as all the methods (which we are calling \\\"actions\\\" here). We want the arguments to those methods to be typed, too. We already have a `StoreWithState` type - we also need a `StoreWithActions` type. \\r\\n\\r\\nThe `Store` type looks like this:\\r\\n\\r\\n```ts\\r\\ntype Store<\\r\\n  S extends StateTree,\\r\\n  A extends Record<string, Method>\\r\\n> = StoreWithState<S> & S & StoreWithActions<A>;\\r\\n```\\r\\n\\r\\n## Typing Actions and Inferring Parameters\\r\\n\\r\\nBefore we write the type, we should figure out what we are actually typing:\\r\\n\\r\\n```ts\\r\\nconst actions = {\\r\\n  inc(val: number = 1) {\\r\\n    this.state.counter += val\\r\\n  },\\r\\n}\\r\\n```\\r\\n\\r\\nWe don't care too much about the body of the function - just the parameters. If we describe `actions` in plain English, it would be \\\"a key value object. If the value exists, and it's a function, infer the type of the arguments and return type\\\". Or something like that.\\r\\n\\r\\nLet's start with \\\"a key value object\\\":\\r\\n\\r\\n```ts\\r\\ntype StoreWithActions<A> = {\\r\\n  [k in keyof A]: any\\r\\n}\\r\\n```\\r\\n\\r\\nThis infers the methods exists. `useMainStore().inc` is typed, but not as a function. Let's fix that:\\r\\n\\r\\n```ts\\r\\ntype StoreWithActions<A> = {\\r\\n  [k in keyof A]: (...args: any[]) => any\\r\\n}\\r\\n```\\r\\n\\r\\nNow we know it's a function. But the parameters still aren't typed! We need to `infer` them - to infer a function has parameters, though, we first need to validate that it is actually a function:\\r\\n\\r\\n```ts\\r\\ntype StoreWithActions<A> = {\\r\\n  [k in keyof A]: A[k] extends (...args: infer P) => infer R\\r\\n    ? /* type */\\r\\n    : /* the key does not exist, or it's not a method */\\r\\n}\\r\\n```\\r\\n\\r\\nWe use `extends` to see if `A[k]` (in this case, actions['inc']` exists, and is a method - that is to say, it has arguments and returns a type. We don't know the type, so we *infer* it. `infer` is kind of like a generic type, except we are creating it based on a type that already exists. If we did not use `infer`, we'd get an error \\\"cannot find name P\\\", since TypeScript would be expecting us to provide that parameters.\\r\\n\\r\\nFinish of the type:\\r\\n\\r\\n```ts\\r\\ntype StoreWithActions<A> = {\\r\\n  [k in keyof A]: A[k] extends (...args: infer P) => infer R\\r\\n    ? (...args: P) => R\\r\\n    : never\\r\\n}\\r\\n```\\r\\n\\r\\nThis is definitely an advanced type. It combines conditional types (using `extends`) and `infer`. This is the most complex type in the store.\\r\\n\\r\\n## Creating the Store Object\\r\\n\\r\\nNow that we finished the types, we can actually implement the store. Inside of `useStore` create a `store` variable:\\r\\n\\r\\n```ts\\r\\nfunction defineStore(options) {\\r\\n  const initialStore = {\\r\\n    state: options.state || {}\\r\\n  }\\r\\n\\r\\n  return function useStore(): Store<S, A> {\\r\\n    const store: Store<S, A> = reactive({\\r\\n      ...initialStore,\\r\\n    }) as Store<S, A>\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nThis has type errors - we need to provide an object typed as `StoreWithActions`. We need the actions to be called with `store` as the `this` context, so we can do `this.state`. This means we will *wrap* the actions and call them with `apply`, passing `store` as the first argument. For this reason the variable is called `wrappedActions` and typed as `StoreWithActions<A>`:\\r\\n\\r\\n```ts\\r\\nfunction defineStore(options) {\\r\\n  const initialStore = {\\r\\n    state: options.state || {}\\r\\n  }\\r\\n\\r\\n  return function useStore(): Store<S, A> {\\r\\n    const wrappedActions: StoreWithActions<A> = {} as StoreWithActions<A>\\r\\n\\r\\n    const store: Store<S, A> = reactive({\\r\\n      ...initialStore,\\r\\n      ...wrappedActions\\r\\n    }) as Store<S, A>\\r\\n\\r\\n    return store\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nA bit messy, but it works. Finally, we just need to wrap the actions. First, type it:\\r\\n\\r\\n```ts\\r\\nconst wrappedActions: StoreWithActions<A> = {} as StoreWithActions<A>\\r\\nconst actions = (options.actions || {}) as A\\r\\nfor (const actionName in actions) {\\r\\n  wrappedActions[actionName] = function() {\\r\\n\\r\\n  } as StoreWithActions<A>[typeof actionName]\\r\\n}\\r\\n```\\r\\n\\r\\nAgain, a bit messy. We need the `as StoreWithActions<A>[typeof actionName]` to get the correct typing. This paralells the `[k in keyof A]` typing we did earlier in `StoreWithActions`. \\r\\n\\r\\nFinally, call the original `actions[actionName]` with `apply`, passing in `store` as the `this` context:\\r\\n\\r\\n```ts\\r\\n\\r\\nfunction defineStore(options) {\\r\\n  // ...\\r\\n  return function useStore(): Store<S, A> {\\r\\n    const wrappedActions: StoreWithActions<A> = {} as StoreWithActions<A>\\r\\n    const actions = (options.actions || {}) as A\\r\\n\\r\\n    for (const actionName in actions) {\\r\\n      wrappedActions[actionName] = function(...args: any[]) {\\r\\n        return actions[actionName].apply(store, args)\\r\\n      } as StoreWithActions<A>[typeof actionName]\\r\\n    }\\r\\n\\r\\n    const store: Store<S, A> = reactive({\\r\\n      ...initialStore,\\r\\n      ...wrappedActions\\r\\n    }) as Store<S, A>\\r\\n\\r\\n    return store\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nThat's it! A type safe store. \\r\\n\\r\\n## Conclusion\\r\\n\\r\\nWe created a type safe store. The types are a bit complex. We covered:\\r\\n\\r\\n- `infer` keyword\\r\\n- `ThisType`\\r\\n- Generics\\r\\n- Conditional types with `extends`\\r\\n- Intersections (`&`)\\r\\n\\r\\nAn improvement would be to add `getters` using Vue's `computed` function. \\r\\n\\r\\nYou can find the source code [here](https://gist.github.com/lmiller1990/9ef32df8fb401e5f0482692ae974e6e0).\";","export default \"<p>In this article we explore some advanced TypeScript while building a type safe store with a similar API to <a href=\\\"https://github.com/posva/pinia\\\">Pinia</a> or <a href=\\\"https://github.com/vuejs/rfcs/discussions/270\\\">Vuex 5</a> (which is still in the RFC stage). I learned a lot of what was needed to write this article by reading the <a href=\\\"https://github.com/posva/pinia/\\\">Pinia</a> source code.</p>\\r\\n<p>You can find the source code <a href=\\\"https://gist.github.com/lmiller1990/9ef32df8fb401e5f0482692ae974e6e0\\\">here</a>.</p>\\r\\n<p>The goal will be a <code>defineStore</code> function that looks like this:</p>\\r\\n<pre><code class=\\\"language-ts\\\">export <span class=\\\"hljs-keyword\\\">const</span> useMainStore = defineStore({\\r\\n  <span class=\\\"hljs-keyword\\\">state</span>: {\\r\\n    counter: <span class=\\\"hljs-number\\\">0</span>,\\r\\n  },\\r\\n  actions: {\\r\\n    inc(val: number = <span class=\\\"hljs-number\\\">1</span>) {\\r\\n      this.<span class=\\\"hljs-keyword\\\">state</span>.counter += val\\r\\n    },\\r\\n  },\\r\\n});\\r\\n</code></pre>\\r\\n<p>The store can then be used by simply calling <code>useMainStore()</code>:</p>\\r\\n<pre><code class=\\\"language-html\\\"><span class=\\\"language-xml\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\r\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span>&gt;</span>Count is: </span><span class=\\\"hljs-template-variable\\\">{{ <span class=\\\"hljs-name\\\">state.counter</span> }}</span><span class=\\\"language-xml\\\"><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\r\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;click&quot;</span>&gt;</span>Inc<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\r\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\r\\n\\r\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">lang</span>=<span class=\\\"hljs-string\\\">&quot;ts&quot;</span>&gt;</span><span class=\\\"language-javascript\\\">\\r\\n<span class=\\\"hljs-keyword\\\">import</span> { computed } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;vue&#x27;</span>\\r\\n<span class=\\\"hljs-keyword\\\">import</span> { useMainStore, useOtherStore } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;./index2&#x27;</span>\\r\\n\\r\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\r\\n  <span class=\\\"hljs-title function_\\\">setup</span>(<span class=\\\"hljs-params\\\"></span>) {\\r\\n    <span class=\\\"hljs-keyword\\\">const</span> store = <span class=\\\"hljs-title function_\\\">useMainStore</span>()\\r\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\r\\n      <span class=\\\"hljs-attr\\\">click</span>: <span class=\\\"hljs-function\\\">() =&gt;</span> store.<span class=\\\"hljs-title function_\\\">inc</span>(),\\r\\n      <span class=\\\"hljs-attr\\\">state</span>: store.<span class=\\\"hljs-property\\\">state</span>,\\r\\n    }\\r\\n  },\\r\\n}\\r\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span></span>\\r\\n</code></pre>\\r\\n<p>The primary goal is to explore some advanced TypeScript types.</p>\\r\\n<h2 id=\\\"definestore\\\"><code>defineStore</code></h2>\\r\\n<p>We will start of with <code>defineStore</code>. It needs to be generic to be type safe - in this case, both the state and actions needs to be declared as generic parameters:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">function</span> defineStore&lt;\\r\\n  S <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title class_ inherited__\\\">StateTree</span>,\\r\\n  A <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title class_ inherited__\\\">Record</span>&lt;<span class=\\\"hljs-built_in\\\">string</span>, <span class=\\\"hljs-title class_\\\">Method</span>&gt;\\r\\n&gt;(options) {\\r\\n  <span class=\\\"hljs-comment\\\">// ...</span>\\r\\n}\\r\\n</code></pre>\\r\\n<p>We will also need a few utility types - <code>StateTree</code> and <code>Method</code>. <code>Method</code> is simple:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">Method</span> = <span class=\\\"hljs-params\\\">(...args: any[])</span> =&gt; <span class=\\\"hljs-title\\\">any</span>;</span>\\r\\n</code></pre>\\r\\n<p><code>StateTree</code> isn&#39;t much more complex - it&#39;s basically typing a JavaScript object, where the key can be a <code>string</code>, <code>number</code> or <code>symbol</code>:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-title class_\\\">StateTree</span> = <span class=\\\"hljs-title class_\\\">Record</span>&lt;<span class=\\\"hljs-built_in\\\">string</span> | <span class=\\\"hljs-built_in\\\">number</span> | symbol, <span class=\\\"hljs-built_in\\\">any</span>&gt;;\\r\\n</code></pre>\\r\\n<h2 id=\\\"typing-the-store-options\\\">Typing the Store Options</h2>\\r\\n<p><code>defineStore</code> takes an object of options - <code>state</code> and <code>actions</code>. <code>state</code> is very easy to type - it&#39;s just <code>S</code>:</p>\\r\\n<pre><code class=\\\"language-ts\\\">function defineStore<span class=\\\"hljs-variable\\\">&lt;\\r\\n  S extends StateTree,\\r\\n  A extends Record&lt;string, Method&gt;</span>\\r\\n&gt;(options: {\\r\\n  <span class=\\\"hljs-keyword\\\">state</span>: S,\\r\\n}) {\\r\\n</code></pre>\\r\\n<p><code>actions</code> is a bit more tricky. We know it&#39;s going to be a type of <code>A</code>, the second generic type passed to <code>defineStore</code>, but it also needs to have knowledge of <code>this</code>. Specifically, it needs to know that <code>this.state</code> exists, and <code>state</code> is a typed as <code>S</code>.</p>\\r\\n<p>The way this is typed is using an intersection type (<code>&amp;</code>) and <a href=\\\"https://www.typescriptlang.org/docs/handbook/utility-types.html#thistypetype\\\"><code>ThisType</code></a>. We need something similar to the example <a href=\\\"https://www.typescriptlang.org/docs/handbook/utility-types.html#thistypetype\\\">in the docs</a>:</p>\\r\\n<pre><code class=\\\"language-ts\\\">actions: <span class=\\\"hljs-keyword\\\">A</span> &amp; ThisType&lt;<span class=\\\"hljs-keyword\\\">A</span> &amp; _STORE_WITH_STATE_&gt;\\r\\n</code></pre>\\r\\n<p>We just need to declare <code>_STORE_WITH_STATE_</code>. We could do it inline:</p>\\r\\n<pre><code class=\\\"language-ts\\\">actions: <span class=\\\"hljs-keyword\\\">A</span> &amp; ThisType&lt;<span class=\\\"hljs-keyword\\\">A</span> &amp; { state: S }&gt;\\r\\n</code></pre>\\r\\n<p>Putting it all together:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-title class_\\\">StateTree</span> = <span class=\\\"hljs-title class_\\\">Record</span>&lt;<span class=\\\"hljs-built_in\\\">string</span> | <span class=\\\"hljs-built_in\\\">number</span> | symbol, <span class=\\\"hljs-built_in\\\">any</span>&gt;;\\r\\n<span class=\\\"hljs-keyword\\\">function</span> defineStore&lt;\\r\\n  S <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title class_ inherited__\\\">StateTree</span>,\\r\\n  A <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title class_ inherited__\\\">Record</span>&lt;<span class=\\\"hljs-built_in\\\">string</span>, <span class=\\\"hljs-title class_\\\">Method</span>&gt;\\r\\n&gt;(<span class=\\\"hljs-attr\\\">options</span>: {\\r\\n  <span class=\\\"hljs-attr\\\">state</span>: S,\\r\\n  <span class=\\\"hljs-attr\\\">actions</span>: A &amp; <span class=\\\"hljs-title class_\\\">ThisType</span>&lt;A &amp; { <span class=\\\"hljs-attr\\\">state</span>: S }&gt;\\r\\n}) {\\r\\n  <span class=\\\"hljs-comment\\\">// ...</span>\\r\\n}\\r\\n</code></pre>\\r\\n<p>I&#39;d like to add more features to the store later, so I am actually going to extract a type, <code>StoreWithState</code>:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-title\\\">StoreWithState&lt;S</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-title\\\">StateTree&gt;</span> </span>= {\\r\\n  state: <span class=\\\"hljs-type\\\">S</span>\\r\\n}\\r\\n\\r\\nexport <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-title\\\">StateTree</span> </span>= <span class=\\\"hljs-type\\\">Record</span>&lt;string | number | symbol, any&gt;;\\r\\nfunction defineStore&lt;\\r\\n  <span class=\\\"hljs-type\\\">S</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-type\\\">StateTree</span>,\\r\\n  <span class=\\\"hljs-type\\\">A</span> <span class=\\\"hljs-keyword\\\">extends</span> <span class=\\\"hljs-type\\\">Record</span>&lt;string, <span class=\\\"hljs-type\\\">Method</span>&gt;\\r\\n&gt;(options: {\\r\\n  state: <span class=\\\"hljs-type\\\">S</span>,\\r\\n  actions: <span class=\\\"hljs-type\\\">A</span> &amp; <span class=\\\"hljs-type\\\">ThisType</span>&lt;<span class=\\\"hljs-type\\\">A</span> &amp; <span class=\\\"hljs-type\\\">StoreWithState</span>&lt;<span class=\\\"hljs-type\\\">S</span>&gt;&gt;\\r\\n}) {\\r\\n  <span class=\\\"hljs-comment\\\">// ...</span>\\r\\n}\\r\\n</code></pre>\\r\\n<p>Now <code>this</code> in actions is typed! Let&#39;s move on to implementing the actual store.</p>\\r\\n<h2 id=\\\"implementing-usestore-and-reactive-state\\\">Implementing <code>useStore</code> and Reactive State</h2>\\r\\n<p>The first thing we need is a store with a state property. Create that (<code>defineStore</code> is shown without the types for simplicity):</p>\\r\\n<pre><code class=\\\"language-ts\\\">function defineStore(options) {\\r\\n  <span class=\\\"hljs-keyword\\\">const</span> initialStore = {\\r\\n    <span class=\\\"hljs-keyword\\\">state</span>: options.<span class=\\\"hljs-keyword\\\">state</span> || {}\\r\\n  }\\r\\n}\\r\\n</code></pre>\\r\\n<p><code>defineStore</code> should return a function. I will call it <code>useStore</code>, and it needs to return what we are going to type as <code>Store</code>:</p>\\r\\n<pre><code class=\\\"language-ts\\\">function defineStore(options) {\\r\\n  <span class=\\\"hljs-keyword\\\">const</span> initialStore = {\\r\\n    <span class=\\\"hljs-keyword\\\">state</span>: options.<span class=\\\"hljs-keyword\\\">state</span> || {}\\r\\n  }\\r\\n\\r\\n  return function useStore(): Store<span class=\\\"hljs-variable\\\">&lt;S, A&gt;</span> {\\r\\n    // ...\\r\\n  }\\r\\n}\\r\\n</code></pre>\\r\\n<p>Typing <code>Store</code> is a bit tricky. It needs to expose a <code>state</code> property, as well as all the methods (which we are calling &quot;actions&quot; here). We want the arguments to those methods to be typed, too. We already have a <code>StoreWithState</code> type - we also need a <code>StoreWithActions</code> type. </p>\\r\\n<p>The <code>Store</code> type looks like this:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">type</span> Store&lt;\\r\\n  S extends StateTree,\\r\\n  A extends <span class=\\\"hljs-keyword\\\">Record</span>&lt;string, <span class=\\\"hljs-function\\\"><span class=\\\"hljs-keyword\\\">Method</span>&gt;\\r\\n&gt; = <span class=\\\"hljs-title\\\">StoreWithState</span>&lt;<span class=\\\"hljs-title\\\">S</span>&gt; &amp; <span class=\\\"hljs-title\\\">S</span> &amp; <span class=\\\"hljs-title\\\">StoreWithActions</span>&lt;<span class=\\\"hljs-title\\\">A</span>&gt;;</span>\\r\\n</code></pre>\\r\\n<h2 id=\\\"typing-actions-and-inferring-parameters\\\">Typing Actions and Inferring Parameters</h2>\\r\\n<p>Before we write the type, we should figure out what we are actually typing:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">const</span> actions = {\\r\\n  inc(val: number = <span class=\\\"hljs-number\\\">1</span>) {\\r\\n    this.<span class=\\\"hljs-keyword\\\">state</span>.counter += val\\r\\n  },\\r\\n}\\r\\n</code></pre>\\r\\n<p>We don&#39;t care too much about the body of the function - just the parameters. If we describe <code>actions</code> in plain English, it would be &quot;a key value object. If the value exists, and it&#39;s a function, infer the type of the arguments and return type&quot;. Or something like that.</p>\\r\\n<p>Let&#39;s start with &quot;a key value object&quot;:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-type\\\">StoreWithActions</span>&lt;<span class=\\\"hljs-type\\\">A</span>&gt; = {\\r\\n  [k in keyof <span class=\\\"hljs-type\\\">A</span>]: any\\r\\n}\\r\\n</code></pre>\\r\\n<p>This infers the methods exists. <code>useMainStore().inc</code> is typed, but not as a function. Let&#39;s fix that:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-title class_\\\">StoreWithActions</span>&lt;A&gt; = {\\r\\n  [k <span class=\\\"hljs-keyword\\\">in</span> keyof A]: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">...args: <span class=\\\"hljs-built_in\\\">any</span>[]</span>) =&gt;</span> <span class=\\\"hljs-built_in\\\">any</span>\\r\\n}\\r\\n</code></pre>\\r\\n<p>Now we know it&#39;s a function. But the parameters still aren&#39;t typed! We need to <code>infer</code> them - to infer a function has parameters, though, we first need to validate that it is actually a function:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-type\\\">StoreWithActions</span>&lt;<span class=\\\"hljs-type\\\">A</span>&gt; = {\\r\\n  [k in keyof <span class=\\\"hljs-type\\\">A</span>]: <span class=\\\"hljs-type\\\">A</span>[k] extends (...args: infer <span class=\\\"hljs-type\\\">P</span>) =&gt; infer <span class=\\\"hljs-type\\\">R</span>\\r\\n    ? /* type */\\r\\n    : /* the key does not exist, or it&#x27;s not a method */\\r\\n}\\r\\n</code></pre>\\r\\n<p>We use <code>extends</code> to see if <code>A[k]</code> (in this case, actions[&#39;inc&#39;]<code>exists, and is a method - that is to say, it has arguments and returns a type. We don&#39;t know the type, so we *infer* it.</code>infer<code>is kind of like a generic type, except we are creating it based on a type that already exists. If we did not use</code>infer`, we&#39;d get an error &quot;cannot find name P&quot;, since TypeScript would be expecting us to provide that parameters.</p>\\r\\n<p>Finish of the type:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">type</span> <span class=\\\"hljs-type\\\">StoreWithActions</span>&lt;<span class=\\\"hljs-type\\\">A</span>&gt; = {\\r\\n  [k in keyof <span class=\\\"hljs-type\\\">A</span>]: <span class=\\\"hljs-type\\\">A</span>[k] extends (...args: infer <span class=\\\"hljs-type\\\">P</span>) =&gt; infer <span class=\\\"hljs-type\\\">R</span>\\r\\n    ? (...args: <span class=\\\"hljs-type\\\">P</span>) =&gt; <span class=\\\"hljs-type\\\">R</span>\\r\\n    : never\\r\\n}\\r\\n</code></pre>\\r\\n<p>This is definitely an advanced type. It combines conditional types (using <code>extends</code>) and <code>infer</code>. This is the most complex type in the store.</p>\\r\\n<h2 id=\\\"creating-the-store-object\\\">Creating the Store Object</h2>\\r\\n<p>Now that we finished the types, we can actually implement the store. Inside of <code>useStore</code> create a <code>store</code> variable:</p>\\r\\n<pre><code class=\\\"language-ts\\\">function defineStore(options) {\\r\\n  <span class=\\\"hljs-keyword\\\">const</span> initialStore = {\\r\\n    <span class=\\\"hljs-keyword\\\">state</span>: options.<span class=\\\"hljs-keyword\\\">state</span> || {}\\r\\n  }\\r\\n\\r\\n  return function useStore(): Store<span class=\\\"hljs-variable\\\">&lt;S, A&gt;</span> {\\r\\n    <span class=\\\"hljs-keyword\\\">const</span> store: Store<span class=\\\"hljs-variable\\\">&lt;S, A&gt;</span> = reactive({\\r\\n      ...initialStore,\\r\\n    }) as Store<span class=\\\"hljs-variable\\\">&lt;S, A&gt;</span>\\r\\n  }\\r\\n}\\r\\n</code></pre>\\r\\n<p>This has type errors - we need to provide an object typed as <code>StoreWithActions</code>. We need the actions to be called with <code>store</code> as the <code>this</code> context, so we can do <code>this.state</code>. This means we will <em>wrap</em> the actions and call them with <code>apply</code>, passing <code>store</code> as the first argument. For this reason the variable is called <code>wrappedActions</code> and typed as <code>StoreWithActions&lt;A&gt;</code>:</p>\\r\\n<pre><code class=\\\"language-ts\\\">function defineStore(options) {\\r\\n  <span class=\\\"hljs-keyword\\\">const</span> initialStore = {\\r\\n    <span class=\\\"hljs-keyword\\\">state</span>: options.<span class=\\\"hljs-keyword\\\">state</span> || {}\\r\\n  }\\r\\n\\r\\n  return function useStore(): Store<span class=\\\"hljs-variable\\\">&lt;S, A&gt;</span> {\\r\\n    <span class=\\\"hljs-keyword\\\">const</span> wrappedActions: StoreWithActions<span class=\\\"hljs-variable\\\">&lt;A&gt;</span> = {} as StoreWithActions<span class=\\\"hljs-variable\\\">&lt;A&gt;</span>\\r\\n\\r\\n    <span class=\\\"hljs-keyword\\\">const</span> store: Store<span class=\\\"hljs-variable\\\">&lt;S, A&gt;</span> = reactive({\\r\\n      ...initialStore,\\r\\n      ...wrappedActions\\r\\n    }) as Store<span class=\\\"hljs-variable\\\">&lt;S, A&gt;</span>\\r\\n\\r\\n    return store\\r\\n  }\\r\\n}\\r\\n</code></pre>\\r\\n<p>A bit messy, but it works. Finally, we just need to wrap the actions. First, type it:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">const</span> wrappedActions: StoreWithActions&lt;A&gt; = {} <span class=\\\"hljs-keyword\\\">as</span> StoreWithActions&lt;A&gt;\\r\\n<span class=\\\"hljs-keyword\\\">const</span> actions = (options.actions || {}) <span class=\\\"hljs-keyword\\\">as</span> A\\r\\n<span class=\\\"hljs-keyword\\\">for</span> (<span class=\\\"hljs-keyword\\\">const</span> actionName <span class=\\\"hljs-keyword\\\">in</span> actions) {\\r\\n  wrappedActions[actionName] = <span class=\\\"hljs-keyword\\\">function</span><span class=\\\"hljs-params\\\">()</span> {\\r\\n\\r\\n  } <span class=\\\"hljs-keyword\\\">as</span> StoreWithActions&lt;A&gt;[<span class=\\\"hljs-keyword\\\">typeof</span> actionName]\\r\\n}\\r\\n</code></pre>\\r\\n<p>Again, a bit messy. We need the <code>as StoreWithActions&lt;A&gt;[typeof actionName]</code> to get the correct typing. This paralells the <code>[k in keyof A]</code> typing we did earlier in <code>StoreWithActions</code>. </p>\\r\\n<p>Finally, call the original <code>actions[actionName]</code> with <code>apply</code>, passing in <code>store</code> as the <code>this</code> context:</p>\\r\\n<pre><code class=\\\"language-ts\\\">\\r\\n<span class=\\\"hljs-keyword\\\">function</span> <span class=\\\"hljs-title function_\\\">defineStore</span>(<span class=\\\"hljs-params\\\">options</span>) {\\r\\n  <span class=\\\"hljs-comment\\\">// ...</span>\\r\\n  <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">function</span> <span class=\\\"hljs-title function_\\\">useStore</span>(<span class=\\\"hljs-params\\\"></span>): <span class=\\\"hljs-title class_\\\">Store</span>&lt;S, A&gt; {\\r\\n    <span class=\\\"hljs-keyword\\\">const</span> <span class=\\\"hljs-attr\\\">wrappedActions</span>: <span class=\\\"hljs-title class_\\\">StoreWithActions</span>&lt;A&gt; = {} <span class=\\\"hljs-keyword\\\">as</span> <span class=\\\"hljs-title class_\\\">StoreWithActions</span>&lt;A&gt;\\r\\n    <span class=\\\"hljs-keyword\\\">const</span> actions = (options.<span class=\\\"hljs-property\\\">actions</span> || {}) <span class=\\\"hljs-keyword\\\">as</span> A\\r\\n\\r\\n    <span class=\\\"hljs-keyword\\\">for</span> (<span class=\\\"hljs-keyword\\\">const</span> actionName <span class=\\\"hljs-keyword\\\">in</span> actions) {\\r\\n      wrappedActions[actionName] = <span class=\\\"hljs-keyword\\\">function</span>(<span class=\\\"hljs-params\\\">...args: any[]</span>) {\\r\\n        <span class=\\\"hljs-keyword\\\">return</span> actions[actionName].<span class=\\\"hljs-title function_\\\">apply</span>(store, args)\\r\\n      } <span class=\\\"hljs-keyword\\\">as</span> <span class=\\\"hljs-title class_\\\">StoreWithActions</span>&lt;A&gt;[<span class=\\\"hljs-keyword\\\">typeof</span> actionName]\\r\\n    }\\r\\n\\r\\n    <span class=\\\"hljs-keyword\\\">const</span> <span class=\\\"hljs-attr\\\">store</span>: <span class=\\\"hljs-title class_\\\">Store</span>&lt;S, A&gt; = <span class=\\\"hljs-title function_\\\">reactive</span>({\\r\\n      ...initialStore,\\r\\n      ...wrappedActions\\r\\n    }) <span class=\\\"hljs-keyword\\\">as</span> <span class=\\\"hljs-title class_\\\">Store</span>&lt;S, A&gt;\\r\\n\\r\\n    <span class=\\\"hljs-keyword\\\">return</span> store\\r\\n  }\\r\\n}\\r\\n</code></pre>\\r\\n<p>That&#39;s it! A type safe store. </p>\\r\\n<h2 id=\\\"conclusion\\\">Conclusion</h2>\\r\\n<p>We created a type safe store. The types are a bit complex. We covered:</p>\\r\\n<ul>\\r\\n<li><code>infer</code> keyword</li>\\r\\n<li><code>ThisType</code></li>\\r\\n<li>Generics</li>\\r\\n<li>Conditional types with <code>extends</code></li>\\r\\n<li>Intersections (<code>&amp;</code>)</li>\\r\\n</ul>\\r\\n<p>An improvement would be to add <code>getters</code> using Vue&#39;s <code>computed</code> function. </p>\\r\\n<p>You can find the source code <a href=\\\"https://gist.github.com/lmiller1990/9ef32df8fb401e5f0482692ae974e6e0\\\">here</a>.</p>\\r\\n\";","export default \"As of Cypress 7.0, the new Component Testing (CT) runner is now bundled with the Cypress when you install it! It takes inspiration from the original CT implementation, which was hidden behind the `experimentalComponentTesting` flag.\\r\\n\\r\\nIn this blog post we will see how to set up CT with a Vue CLI project. CT supports both Vue 2 and Vue 3, with TypeScript support out of the box.\\r\\n\\r\\nYou can get the source code for the blog post [here](https://github.com/lmiller1990/vue-cypress-template).\\r\\n\\r\\n## Creating a new Vue CLI Project\\r\\n\\r\\nCreate a new Vue CLI project to get started. For this example I chose Vue 2 and TypeScript, but everything works exactly the same with Vue 3.\\r\\n\\r\\n## Configuring Cypress Component Testing\\r\\n\\r\\nOnce you've got a Vue project, you'll also need to install Cypress and the Webpack Dev Server and Vue adapters. Vue CLI projects are Webpack based; that's why we are installing the relevant Webpack adapter:\\r\\n\\r\\n```sh\\r\\nyarn add cypress @cypress/vue @cypress/webpack-dev-server --dev\\r\\n# or \\r\\nnpm install cypress @cypress/vue @cypress/webpack-dev-server --dev\\r\\n```\\r\\n\\r\\nIf you would like to use Vue 3, you'll need the `next` branch of `@cypress/vue`. Install that with:\\r\\n\\r\\n```sh\\r\\nyarn add @cypress/vue@next --dev\\r\\n# or\\r\\nnpm install @cypress/vue@next --dev\\r\\n```\\r\\n\\r\\nThe last thing we need to do is add some basic configuration. It is possible to configure things manually, but to save some time we will use `create-cypress-tests`, a little utility to help you scaffold configuration, much like the Vue CLI.\\r\\n\\r\\n```sh\\r\\nyarn create cypress-tests\\r\\n\\r\\n# or npm\\r\\nnpx create-cypress-tests\\r\\n```\\r\\n\\r\\nYou are prompted with \\\"Do you want to setup component testing?\\\". Answer yes!\\r\\n\\r\\nThe next question asks for your template. Select `vue-cli`. There are a number of other adapters to use. At the time of this post, the Webpack adapter is the most mature and stable.\\r\\n\\r\\nThe final question asks where you'd like to place your spec files. I like to use `src`, so my specs are near the relevant components.\\r\\n\\r\\nThe wizard created a number of files for you. The most interesting is `cypress/plugins/index.js`:\\r\\n\\r\\n```js\\r\\nconst { startDevServer } = require(\\\"@cypress/webpack-dev-server\\\");\\r\\n\\r\\nconst webpackConfig = require(\\\"@vue/cli-service/webpack.config.js\\\");\\r\\n\\r\\nmodule.exports = (on, config) => {\\r\\n  on(\\\"dev-server:start\\\", options =>\\r\\n    startDevServer({\\r\\n      options,\\r\\n      webpackConfig\\r\\n    })\\r\\n  );\\r\\n};\\r\\n```\\r\\n\\r\\nThis will configure the Cypress Webpack Dev Server to use the same `webpack.config.js` as your project. \\r\\n\\r\\n## Writing Some Tests\\r\\n\\r\\nLet's get started! I created `src/components/HelloWorld.spec.ts` to try things out. Add a minimal test:\\r\\n\\r\\n```ts\\r\\nimport { mount } from '@cypress/vue'\\r\\nimport HelloWorld from './HelloWorld.vue'\\r\\n\\r\\ndescribe('HelloWorld', () => {\\r\\n  it('renders a message', () => {\\r\\n    const msg = 'Hello Cypress Component Testing!'\\r\\n    mount(HelloWorld, {\\r\\n      propsData: {\\r\\n        msg\\r\\n      }\\r\\n    })\\r\\n\\r\\n    cy.get('h1').should('have.text', msg)\\r\\n  })\\r\\n})\\r\\n```\\r\\n\\r\\nThe `mount` function is very similar to the one from [Vue Test Utils](https://vue-test-utils.vuejs.org/). It's actually built on top of Vue Test Utils! So you can use the mounting options you might already be familiar with.\\r\\n\\r\\nLearn more about how to write assertions with Cypress [in the official docs](https://docs.cypress.io/guides/references/assertions). Get an overview of the `cy` object and how to use it [here](https://docs.cypress.io/guides/core-concepts/introduction-to-cypress#Cypress-Can-Be-Simple-Sometimes).\\r\\n\\r\\nFinally, open the Component Testing runner:\\r\\n\\r\\n```sh\\r\\nyarn cypress open-ct # or npx cypress open-ct\\r\\n```\\r\\n\\r\\nSelect the spec and watch the test pass!\\r\\n\\r\\n![Cypress Component Testing Runner Success](https://github.com/lmiller1990/vue-cypress-template/raw/master/img1.png)\\r\\n\\r\\nTry updating the test and making it fail. Cypress will re-run your test (almost) instantly. This makes for a great red-green-refactor loop.\\r\\n\\r\\n![Cypress Component Testing Runner Failure](https://github.com/lmiller1990/vue-cypress-template/raw/master/img2.png)\\r\\n\\r\\n## Vue 3 Usage\\r\\n\\r\\nEverything works the same with Vue 3. Just make sure you have a Vue 3 project and the correct adapter:\\r\\n\\r\\n```sh\\r\\nyarn add @cypress/vue@next --dev\\r\\n# or\\r\\nnpm install @cypress/vue@next --dev\\r\\n```\\r\\n\\r\\nThe mounting options are the same as [Vue Test Utils](https://next.vue-test-utils.vuejs.org/api/#mount), so if you've used Vue Test Utils before, you'll feel right at home. \\r\\n\\r\\n## Discussion\\r\\n\\r\\nCypress Component Testing is an alternative to a jsdom based testing environment, such as Jest and Vue Test Utils. Cypress Component Testing offers many benefits:\\r\\n\\r\\n- Runs in a real browser. This means your tests are closer to what your users will be experiencing.\\r\\n- Visual. You can see exactly what is rendered. No more `console.log(wrapper.html())`.\\r\\n- Powered by Cypress - the most popular and reliable E2E testing tool out there.\\r\\n\\r\\nIt also doubles as a *design environment*. You can see the component as you develop it, and hot reload give you a near instance feedback loop. It can potentially take the place of not only your Jest based test infrastructure, but your Storybook based design infrastructure as well. \\r\\n\\r\\nCypress Component Testing is still in alpha but the product is quickly evolving and promises to change the landscape of Component Testing.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nCypress Component Testing brings everything that is great about Cypress to Component Testing. Since the underlying adapters are built on libraries like Webpack and Vue Test Utils, you don't need to throw away your entire test suite - incrementally migration is more than possible. \\r\\n\\r\\nThe visual aspect united testing and design in a single tool. My days of grepping a messy console output to figure out what the user will see are over - I can see exactly what the component will look like as my tests run.\\r\\n\\r\\nYou can get the source code for the blog post [here](https://github.com/lmiller1990/vue-cypress-template).\";","export default \"<p>As of Cypress 7.0, the new Component Testing (CT) runner is now bundled with the Cypress when you install it! It takes inspiration from the original CT implementation, which was hidden behind the <code>experimentalComponentTesting</code> flag.</p>\\r\\n<p>In this blog post we will see how to set up CT with a Vue CLI project. CT supports both Vue 2 and Vue 3, with TypeScript support out of the box.</p>\\r\\n<p>You can get the source code for the blog post <a href=\\\"https://github.com/lmiller1990/vue-cypress-template\\\">here</a>.</p>\\r\\n<h2 id=\\\"creating-a-new-vue-cli-project\\\">Creating a new Vue CLI Project</h2>\\r\\n<p>Create a new Vue CLI project to get started. For this example I chose Vue 2 and TypeScript, but everything works exactly the same with Vue 3.</p>\\r\\n<h2 id=\\\"configuring-cypress-component-testing\\\">Configuring Cypress Component Testing</h2>\\r\\n<p>Once you&#39;ve got a Vue project, you&#39;ll also need to install Cypress and the Webpack Dev Server and Vue adapters. Vue CLI projects are Webpack based; that&#39;s why we are installing the relevant Webpack adapter:</p>\\r\\n<pre><code class=\\\"language-sh\\\">yarn <span class=\\\"hljs-keyword\\\">add</span> cypress <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>vue <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>webpack<span class=\\\"hljs-operator\\\">-</span>dev<span class=\\\"hljs-operator\\\">-</span>server <span class=\\\"hljs-comment\\\">--dev</span>\\r\\n# <span class=\\\"hljs-keyword\\\">or</span> \\r\\nnpm install cypress <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>vue <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>webpack<span class=\\\"hljs-operator\\\">-</span>dev<span class=\\\"hljs-operator\\\">-</span>server <span class=\\\"hljs-comment\\\">--dev</span>\\r\\n</code></pre>\\r\\n<p>If you would like to use Vue 3, you&#39;ll need the <code>next</code> branch of <code>@cypress/vue</code>. Install that with:</p>\\r\\n<pre><code class=\\\"language-sh\\\">yarn <span class=\\\"hljs-keyword\\\">add</span> <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>vue<span class=\\\"hljs-variable\\\">@next</span> <span class=\\\"hljs-comment\\\">--dev</span>\\r\\n# <span class=\\\"hljs-keyword\\\">or</span>\\r\\nnpm install <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>vue<span class=\\\"hljs-variable\\\">@next</span> <span class=\\\"hljs-comment\\\">--dev</span>\\r\\n</code></pre>\\r\\n<p>The last thing we need to do is add some basic configuration. It is possible to configure things manually, but to save some time we will use <code>create-cypress-tests</code>, a little utility to help you scaffold configuration, much like the Vue CLI.</p>\\r\\n<pre><code class=\\\"language-sh\\\">yarn <span class=\\\"hljs-keyword\\\">create</span> cypress-tests\\r\\n\\r\\n<span class=\\\"hljs-meta\\\"># or npm</span>\\r\\nnpx <span class=\\\"hljs-keyword\\\">create</span>-cypress-tests\\r\\n</code></pre>\\r\\n<p>You are prompted with &quot;Do you want to setup component testing?&quot;. Answer yes!</p>\\r\\n<p>The next question asks for your template. Select <code>vue-cli</code>. There are a number of other adapters to use. At the time of this post, the Webpack adapter is the most mature and stable.</p>\\r\\n<p>The final question asks where you&#39;d like to place your spec files. I like to use <code>src</code>, so my specs are near the relevant components.</p>\\r\\n<p>The wizard created a number of files for you. The most interesting is <code>cypress/plugins/index.js</code>:</p>\\r\\n<pre><code class=\\\"language-js\\\"><span class=\\\"hljs-keyword\\\">const</span> { startDevServer } = <span class=\\\"hljs-built_in\\\">require</span>(<span class=\\\"hljs-string\\\">&quot;@cypress/webpack-dev-server&quot;</span>);\\r\\n\\r\\n<span class=\\\"hljs-keyword\\\">const</span> webpackConfig = <span class=\\\"hljs-built_in\\\">require</span>(<span class=\\\"hljs-string\\\">&quot;@vue/cli-service/webpack.config.js&quot;</span>);\\r\\n\\r\\nmodule.<span class=\\\"hljs-built_in\\\">exports</span> = (<span class=\\\"hljs-literal\\\">on</span>, config) =&gt; {\\r\\n  <span class=\\\"hljs-literal\\\">on</span>(<span class=\\\"hljs-string\\\">&quot;dev-server:start&quot;</span>, options =&gt;\\r\\n    startDevServer({\\r\\n      options,\\r\\n      webpackConfig\\r\\n    })\\r\\n  );\\r\\n};\\r\\n</code></pre>\\r\\n<p>This will configure the Cypress Webpack Dev Server to use the same <code>webpack.config.js</code> as your project. </p>\\r\\n<h2 id=\\\"writing-some-tests\\\">Writing Some Tests</h2>\\r\\n<p>Let&#39;s get started! I created <code>src/components/HelloWorld.spec.ts</code> to try things out. Add a minimal test:</p>\\r\\n<pre><code class=\\\"language-ts\\\"><span class=\\\"hljs-keyword\\\">import</span> { mount } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;@cypress/vue&#x27;</span>\\r\\n<span class=\\\"hljs-keyword\\\">import</span> HelloWorld <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;./HelloWorld.vue&#x27;</span>\\r\\n\\r\\ndescribe(<span class=\\\"hljs-string\\\">&#x27;HelloWorld&#x27;</span>, <span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> {\\r\\n  it(<span class=\\\"hljs-string\\\">&#x27;renders a message&#x27;</span>, <span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> {\\r\\n    const msg = <span class=\\\"hljs-string\\\">&#x27;Hello Cypress Component Testing!&#x27;</span>\\r\\n    mount(HelloWorld, {\\r\\n      propsData: {\\r\\n        msg\\r\\n      }\\r\\n    })\\r\\n\\r\\n    cy.get(<span class=\\\"hljs-string\\\">&#x27;h1&#x27;</span>).should(<span class=\\\"hljs-string\\\">&#x27;have.text&#x27;</span>, msg)\\r\\n  })\\r\\n})\\r\\n</code></pre>\\r\\n<p>The <code>mount</code> function is very similar to the one from <a href=\\\"https://vue-test-utils.vuejs.org/\\\">Vue Test Utils</a>. It&#39;s actually built on top of Vue Test Utils! So you can use the mounting options you might already be familiar with.</p>\\r\\n<p>Learn more about how to write assertions with Cypress <a href=\\\"https://docs.cypress.io/guides/references/assertions\\\">in the official docs</a>. Get an overview of the <code>cy</code> object and how to use it <a href=\\\"https://docs.cypress.io/guides/core-concepts/introduction-to-cypress#Cypress-Can-Be-Simple-Sometimes\\\">here</a>.</p>\\r\\n<p>Finally, open the Component Testing runner:</p>\\r\\n<pre><code class=\\\"language-sh\\\">yarn cypress <span class=\\\"hljs-keyword\\\">open</span>-<span class=\\\"hljs-keyword\\\">ct</span> # or npx cypress <span class=\\\"hljs-keyword\\\">open</span>-<span class=\\\"hljs-keyword\\\">ct</span>\\r\\n</code></pre>\\r\\n<p>Select the spec and watch the test pass!</p>\\r\\n<p><img src=\\\"https://github.com/lmiller1990/vue-cypress-template/raw/master/img1.png\\\" alt=\\\"Cypress Component Testing Runner Success\\\"></p>\\r\\n<p>Try updating the test and making it fail. Cypress will re-run your test (almost) instantly. This makes for a great red-green-refactor loop.</p>\\r\\n<p><img src=\\\"https://github.com/lmiller1990/vue-cypress-template/raw/master/img2.png\\\" alt=\\\"Cypress Component Testing Runner Failure\\\"></p>\\r\\n<h2 id=\\\"vue-3-usage\\\">Vue 3 Usage</h2>\\r\\n<p>Everything works the same with Vue 3. Just make sure you have a Vue 3 project and the correct adapter:</p>\\r\\n<pre><code class=\\\"language-sh\\\">yarn <span class=\\\"hljs-keyword\\\">add</span> <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>vue<span class=\\\"hljs-variable\\\">@next</span> <span class=\\\"hljs-comment\\\">--dev</span>\\r\\n# <span class=\\\"hljs-keyword\\\">or</span>\\r\\nnpm install <span class=\\\"hljs-variable\\\">@cypress</span><span class=\\\"hljs-operator\\\">/</span>vue<span class=\\\"hljs-variable\\\">@next</span> <span class=\\\"hljs-comment\\\">--dev</span>\\r\\n</code></pre>\\r\\n<p>The mounting options are the same as <a href=\\\"https://next.vue-test-utils.vuejs.org/api/#mount\\\">Vue Test Utils</a>, so if you&#39;ve used Vue Test Utils before, you&#39;ll feel right at home. </p>\\r\\n<h2 id=\\\"discussion\\\">Discussion</h2>\\r\\n<p>Cypress Component Testing is an alternative to a jsdom based testing environment, such as Jest and Vue Test Utils. Cypress Component Testing offers many benefits:</p>\\r\\n<ul>\\r\\n<li>Runs in a real browser. This means your tests are closer to what your users will be experiencing.</li>\\r\\n<li>Visual. You can see exactly what is rendered. No more <code>console.log(wrapper.html())</code>.</li>\\r\\n<li>Powered by Cypress - the most popular and reliable E2E testing tool out there.</li>\\r\\n</ul>\\r\\n<p>It also doubles as a <em>design environment</em>. You can see the component as you develop it, and hot reload give you a near instance feedback loop. It can potentially take the place of not only your Jest based test infrastructure, but your Storybook based design infrastructure as well. </p>\\r\\n<p>Cypress Component Testing is still in alpha but the product is quickly evolving and promises to change the landscape of Component Testing.</p>\\r\\n<h2 id=\\\"conclusion\\\">Conclusion</h2>\\r\\n<p>Cypress Component Testing brings everything that is great about Cypress to Component Testing. Since the underlying adapters are built on libraries like Webpack and Vue Test Utils, you don&#39;t need to throw away your entire test suite - incrementally migration is more than possible. </p>\\r\\n<p>The visual aspect united testing and design in a single tool. My days of grepping a messy console output to figure out what the user will see are over - I can see exactly what the component will look like as my tests run.</p>\\r\\n<p>You can get the source code for the blog post <a href=\\\"https://github.com/lmiller1990/vue-cypress-template\\\">here</a>.</p>\";","import moment from 'moment'\r\n\r\nimport postReactivityMd from 'raw-loader!./data/vue-reactivity-md.txt'\r\nimport postReactivityHtml from 'raw-loader!./data/vue-reactivity-html.txt'\r\n\r\nimport rendererMd from 'raw-loader!./data/renderer-md.txt'\r\nimport rendererHtml from 'raw-loader!./data/renderer-html.txt'\r\n\r\nimport pipelineMd from 'raw-loader!./data/pipeline-md.txt'\r\nimport pipelineHtml from 'raw-loader!./data/pipeline-html.txt'\r\n\r\nimport storeMd from 'raw-loader!./data/store-md.txt'\r\nimport storeHtml from 'raw-loader!./data/store-html.txt'\r\n\r\nimport cypressMd from 'raw-loader!./data/cypress-md.txt'\r\nimport cypressHtml from 'raw-loader!./data/cypress-html.txt'\r\n\r\nexport interface Post {\r\n  id: string\r\n  title: string\r\n  created: moment.Moment\r\n  html?: string\r\n  markdown?: string\r\n  authorId: string\r\n}\r\n\r\n// 2020-01-01\r\nexport const today: Post = {\r\n  id: '1',\r\n  title: 'Today',\r\n  created: moment().subtract(1, 'second'),\r\n  authorId: '1'\r\n}\r\n\r\nexport const thisWeek: Post = {\r\n  id: '2',\r\n  title: 'This Week',\r\n  created: moment().subtract(2, 'days'),\r\n  authorId: '1'\r\n}\r\n\r\nexport const thisMonth: Post = {\r\n  id: '3',\r\n  title: 'This Month',\r\n  created: moment().subtract(12, 'days'),\r\n  authorId: '1'\r\n}\r\n\r\nexport const demoData: Post[] = [\r\n  {\r\n    id: '4',\r\n    title: '🐙 Understanding Vue 3 Reactivity',\r\n    created: moment().subtract(1, 'second'),\r\n    authorId: '1',\r\n    markdown: postReactivityMd,\r\n    html: postReactivityHtml,\r\n  },\r\n  {\r\n    id: '5',\r\n    title: '😎 Writing a Custom Renderer',\r\n    created: moment().subtract(1, 'second'),\r\n    authorId: '1',\r\n    markdown: rendererMd,\r\n    html: rendererHtml,\r\n  },\r\n  {\r\n    id: '6',\r\n    title: '🔮 A Futuristic Functional Language for Web Dev - ESNext Pipelines',\r\n    created: moment().subtract(1, 'second'),\r\n    authorId: '1',\r\n    markdown: pipelineMd,\r\n    html: pipelineHtml,\r\n  },\r\n  {\r\n    id: '7',\r\n    title: '🏪 Building a Type Safe Store',\r\n    created: moment().subtract(1, 'second'),\r\n    authorId: '1',\r\n    markdown: storeMd,\r\n    html: storeHtml,\r\n  },\r\n  {\r\n    id: '8',\r\n    title: '🧪 Cypress Component Testing',\r\n    created: moment().subtract(1, 'second'),\r\n    authorId: '1',\r\n    markdown: cypressMd,\r\n    html: cypressHtml,\r\n  },\r\n]\r\n","<template>\r\n  <suspense>\r\n    <template #default>\r\n      <timeline />\r\n    </template>\r\n\r\n    <template #fallback>\r\n      <spinner />\r\n    </template>\r\n  </suspense>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport Timeline from './Timeline.vue';\r\nimport Spinner from './Spinner.vue';\r\n\r\nexport default defineComponent({\r\n  name: 'App',\r\n  components: {\r\n    Timeline,\r\n    Spinner\r\n  }\r\n});\r\n</script>\r\n\r\n","<template>\r\n  <div class=\"message is-primary is-marginless\">\r\n    <div class=\"message-header\">\r\n      <div>Posts for {{ currentPeriod.toLowerCase() }}</div>\r\n    </div>\r\n  </div>\r\n  <nav class=\"is-primary panel\">\r\n    <span class=\"panel-tabs\">\r\n      <a \r\n        v-for=\"period in periods\" \r\n        :key=\"period\"\r\n        :class=\"{ 'is-active': period === currentPeriod }\"\r\n        :data-test=\"period\"\r\n        @click=\"setPeriod(period)\"\r\n      >\r\n        {{ period }}\r\n      </a>\r\n    </span>\r\n\r\n    <timeline-post\r\n      v-for=\"post in posts\"\r\n      :key=\"post.id\"\r\n      :post=\"post\"\r\n      class=\"panel-block\"\r\n    />\r\n  </nav>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref, computed } from 'vue';\r\nimport moment from 'moment'\r\nimport { today, thisWeek, thisMonth, Post } from '../mocks'\r\nimport { useStore } from '../store'\r\nimport TimelinePost from './TimelinePost.vue'\r\n\r\ntype Period = 'Today' | 'This Week' | 'This Month'\r\n\r\nexport default defineComponent({\r\n  name: 'Timeline',\r\n\r\n  components: {\r\n    TimelinePost\r\n  },\r\n\r\n  async setup() {\r\n    const periods: Period[] = ['Today', 'This Week', 'This Month']\r\n    const currentPeriod = ref<Period>('Today')\r\n    const store = useStore()\r\n\r\n    if (!store.getState().posts.loaded) {\r\n      await store.fetchPosts()\r\n    }\r\n\r\n    const allPosts: Post[] = store.getState().posts.ids.reduce<Post[]>((acc, id) => {\r\n      const thePost = store.getState().posts.all.get(id)\r\n      if (!thePost) {\r\n        throw Error('This post was not found')\r\n      }\r\n      return acc.concat(thePost)\r\n    }, [])\r\n\r\n    const posts = computed(() => {\r\n      return allPosts.filter(post => {\r\n        if (currentPeriod.value === 'Today') {\r\n          return post.created.isAfter(moment().subtract(1, 'day'))\r\n        }\r\n\r\n        if (currentPeriod.value === 'This Week') {\r\n          return post.created.isAfter(moment().subtract(1, 'week'))\r\n        }\r\n\r\n        if (currentPeriod.value === 'This Month') {\r\n          return post.created.isAfter(moment().subtract(1, 'month'))\r\n        }\r\n        return false\r\n      })\r\n    })\r\n\r\n    const setPeriod = (period: Period) => {\r\n      currentPeriod.value = period\r\n    }\r\n\r\n    return {\r\n      posts,\r\n      periods,\r\n      setPeriod,\r\n      currentPeriod\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>\r\n","<template>\r\n  <router-link\r\n    :key=\"post.id\"\r\n    class=\"panel-block\"\r\n    :to=\"to\"\r\n  >\r\n    <div class=\"is-flex is-flex-direction-column is-align-items-flex-start\">\r\n      <a>{{ post.title }}</a>\r\n      <div>{{ post.created.format('Do MMM') }}</div>\r\n    </div>\r\n  </router-link>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent  } from 'vue';\r\nimport { Post } from '../mocks'\r\n\r\nexport default defineComponent({\r\n  name: 'TimelinePost',\r\n\r\n  props: {\r\n    post: {\r\n      type: Object as () => Post,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  setup(props) {\r\n    return {\r\n      to: `/posts/${props.post.id}`\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>\r\n","\r\nimport { defineComponent  } from 'vue';\r\nimport { Post } from '../mocks'\r\n\r\nexport default defineComponent({\r\n  name: 'TimelinePost',\r\n\r\n  props: {\r\n    post: {\r\n      type: Object as () => Post,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  setup(props) {\r\n    return {\r\n      to: `/posts/${props.post.id}`\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./TimelinePost.vue?vue&type=template&id=6cd469de&scoped=true\"\nimport script from \"./TimelinePost.vue?vue&type=script&lang=ts\"\nexport * from \"./TimelinePost.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-6cd469de\"\n\nexport default script","\r\nimport { defineComponent, ref, computed } from 'vue';\r\nimport moment from 'moment'\r\nimport { today, thisWeek, thisMonth, Post } from '../mocks'\r\nimport { useStore } from '../store'\r\nimport TimelinePost from './TimelinePost.vue'\r\n\r\ntype Period = 'Today' | 'This Week' | 'This Month'\r\n\r\nexport default defineComponent({\r\n  name: 'Timeline',\r\n\r\n  components: {\r\n    TimelinePost\r\n  },\r\n\r\n  async setup() {\r\n    const periods: Period[] = ['Today', 'This Week', 'This Month']\r\n    const currentPeriod = ref<Period>('Today')\r\n    const store = useStore()\r\n\r\n    if (!store.getState().posts.loaded) {\r\n      await store.fetchPosts()\r\n    }\r\n\r\n    const allPosts: Post[] = store.getState().posts.ids.reduce<Post[]>((acc, id) => {\r\n      const thePost = store.getState().posts.all.get(id)\r\n      if (!thePost) {\r\n        throw Error('This post was not found')\r\n      }\r\n      return acc.concat(thePost)\r\n    }, [])\r\n\r\n    const posts = computed(() => {\r\n      return allPosts.filter(post => {\r\n        if (currentPeriod.value === 'Today') {\r\n          return post.created.isAfter(moment().subtract(1, 'day'))\r\n        }\r\n\r\n        if (currentPeriod.value === 'This Week') {\r\n          return post.created.isAfter(moment().subtract(1, 'week'))\r\n        }\r\n\r\n        if (currentPeriod.value === 'This Month') {\r\n          return post.created.isAfter(moment().subtract(1, 'month'))\r\n        }\r\n        return false\r\n      })\r\n    })\r\n\r\n    const setPeriod = (period: Period) => {\r\n      currentPeriod.value = period\r\n    }\r\n\r\n    return {\r\n      posts,\r\n      periods,\r\n      setPeriod,\r\n      currentPeriod\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./Timeline.vue?vue&type=template&id=404a6766&scoped=true\"\nimport script from \"./Timeline.vue?vue&type=script&lang=ts\"\nexport * from \"./Timeline.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-404a6766\"\n\nexport default script","<template>\r\n  <progress class=\"progress is-primary is-small\" />\r\n</template>","import { render } from \"./Spinner.vue?vue&type=template&id=0f680f3b\"\nconst script = {}\nscript.render = render\n\nexport default script","\r\nimport { defineComponent } from 'vue';\r\nimport Timeline from './Timeline.vue';\r\nimport Spinner from './Spinner.vue';\r\n\r\nexport default defineComponent({\r\n  name: 'App',\r\n  components: {\r\n    Timeline,\r\n    Spinner\r\n  }\r\n});\r\n","import { render } from \"./Home.vue?vue&type=template&id=3a039972\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n  <post-writer \r\n    :post=\"newPost\" \r\n    @save=\"save\"\r\n  />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport { Post } from '../mocks';\r\nimport PostWriter from './PostWriter.vue'\r\nimport moment from 'moment';\r\nimport { useStore } from '../store';\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostWriter\r\n  },\r\n\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    const authorId = store.getState().authors.currentUserId\r\n\r\n    if (!authorId) {\r\n      throw Error('currentUserId was not found.')\r\n    }\r\n\r\n    const newPost: Post = {\r\n      id: '-1',\r\n      title: 'Enter your title...',\r\n      created: moment().subtract(1, 'second'),\r\n      authorId\r\n    }\r\n\r\n    const save = async (post: Post) => {\r\n      await store.createPost(post)\r\n      router.push('/')\r\n    }\r\n\r\n    return {\r\n      newPost,\r\n      save\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n</style>\r\n","<template>\r\n  <div class=\"columns\">\r\n    <div class=\"column\">\r\n      <div class=\"field\">\r\n        <div class=\"label\">New Post</div>\r\n        <input \r\n          type=\"text\" \r\n          class=\"input\"\r\n          v-model=\"title\"\r\n          data-test=\"title\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"columns\">\r\n    <div class=\"column\">\r\n      <div \r\n        contenteditable \r\n        id=\"markdown\"\r\n        ref=\"contentEditable\" \r\n        @input=\"handleInput\" \r\n        data-test=\"content\"\r\n      />\r\n    </div>\r\n    <div class=\"column\">\r\n      <div v-html=\"html\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"columns\">\r\n    <div class=\"column\">\r\n      <button \r\n        @click=\"save\" \r\n        class=\"button is-primary is-pulled-right\"\r\n        data-test=\"submit\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Post } from '../mocks';\r\nimport { defineComponent, onMounted, ref, watch, watchEffect } from 'vue';\r\nimport { parse } from 'marked'\r\nimport highlight from 'highlight.js'\r\nimport debounce from 'lodash/debounce'\r\nimport { useStore } from '@/store';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    post: {\r\n      type: Object as () => Post,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  emits: {\r\n    save: (post: Post) => {\r\n      return true\r\n    }\r\n  },\r\n\r\n  setup(props, ctx) {\r\n    const title = ref(props.post.title)\r\n    const content = ref(props.post.markdown || '')\r\n    const html = ref('')\r\n\r\n    const parseHtml = (str: string) => {\r\n      html.value = parse(str, {\r\n        gfm: true,\r\n        breaks: true,\r\n        highlight: (code: string) => {\r\n          return highlight.highlightAuto(code).value\r\n        }\r\n      })\r\n    }\r\n\r\n    watch(content, debounce((newVal) => {\r\n      parseHtml(newVal)\r\n    }, 250), { immediate: true })\r\n\r\n    const contentEditable = ref<HTMLDivElement | null>(null)\r\n\r\n    const handleInput = () => {\r\n      if (!contentEditable.value) {\r\n        throw Error('This should never happen')\r\n      }\r\n\r\n      content.value = contentEditable.value.innerText || ''\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (!contentEditable.value) {\r\n        throw Error('This should never happen')\r\n      }\r\n\r\n      contentEditable.value.innerText = content.value\r\n    })\r\n\r\n    const save = () => {\r\n      const newPost: Post = {\r\n        ...props.post,\r\n        title: title.value,\r\n        html: html.value,\r\n        markdown: content.value,\r\n      }\r\n\r\n      ctx.emit('save', newPost)\r\n    }\r\n\r\n    return {\r\n      save,\r\n      html,\r\n      title,\r\n      handleInput,\r\n      content,\r\n      contentEditable\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n.column {\r\n  overflow-y: scroll;\r\n}\r\n\r\n#markdown {\r\n  white-space: pre-wrap;\r\n}\r\n</style>\r\n","\r\nimport { Post } from '../mocks';\r\nimport { defineComponent, onMounted, ref, watch, watchEffect } from 'vue';\r\nimport { parse } from 'marked'\r\nimport highlight from 'highlight.js'\r\nimport debounce from 'lodash/debounce'\r\nimport { useStore } from '@/store';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    post: {\r\n      type: Object as () => Post,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  emits: {\r\n    save: (post: Post) => {\r\n      return true\r\n    }\r\n  },\r\n\r\n  setup(props, ctx) {\r\n    const title = ref(props.post.title)\r\n    const content = ref(props.post.markdown || '')\r\n    const html = ref('')\r\n\r\n    const parseHtml = (str: string) => {\r\n      html.value = parse(str, {\r\n        gfm: true,\r\n        breaks: true,\r\n        highlight: (code: string) => {\r\n          return highlight.highlightAuto(code).value\r\n        }\r\n      })\r\n    }\r\n\r\n    watch(content, debounce((newVal) => {\r\n      parseHtml(newVal)\r\n    }, 250), { immediate: true })\r\n\r\n    const contentEditable = ref<HTMLDivElement | null>(null)\r\n\r\n    const handleInput = () => {\r\n      if (!contentEditable.value) {\r\n        throw Error('This should never happen')\r\n      }\r\n\r\n      content.value = contentEditable.value.innerText || ''\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (!contentEditable.value) {\r\n        throw Error('This should never happen')\r\n      }\r\n\r\n      contentEditable.value.innerText = content.value\r\n    })\r\n\r\n    const save = () => {\r\n      const newPost: Post = {\r\n        ...props.post,\r\n        title: title.value,\r\n        html: html.value,\r\n        markdown: content.value,\r\n      }\r\n\r\n      ctx.emit('save', newPost)\r\n    }\r\n\r\n    return {\r\n      save,\r\n      html,\r\n      title,\r\n      handleInput,\r\n      content,\r\n      contentEditable\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./PostWriter.vue?vue&type=template&id=575f6bb7\"\nimport script from \"./PostWriter.vue?vue&type=script&lang=ts\"\nexport * from \"./PostWriter.vue?vue&type=script&lang=ts\"\n\nimport \"./PostWriter.vue?vue&type=style&index=0&id=575f6bb7&lang=css\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent } from 'vue';\r\nimport { Post } from '../mocks';\r\nimport PostWriter from './PostWriter.vue'\r\nimport moment from 'moment';\r\nimport { useStore } from '../store';\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostWriter\r\n  },\r\n\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    const authorId = store.getState().authors.currentUserId\r\n\r\n    if (!authorId) {\r\n      throw Error('currentUserId was not found.')\r\n    }\r\n\r\n    const newPost: Post = {\r\n      id: '-1',\r\n      title: 'Enter your title...',\r\n      created: moment().subtract(1, 'second'),\r\n      authorId\r\n    }\r\n\r\n    const save = async (post: Post) => {\r\n      await store.createPost(post)\r\n      router.push('/')\r\n    }\r\n\r\n    return {\r\n      newPost,\r\n      save\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./NewPost.vue?vue&type=template&id=3f7e4700\"\nimport script from \"./NewPost.vue?vue&type=script&lang=ts\"\nexport * from \"./NewPost.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n  <suspense>\r\n    <template #default>\r\n      <post-viewer />\r\n    </template>\r\n\r\n    <template #fallback>\r\n      <spinner />\r\n    </template>\r\n  </suspense>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport PostViewer from './PostViewer.vue'\r\nimport Spinner from './Spinner.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostViewer,\r\n    Spinner\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div class=\"columns\">\r\n    <div class=\"column\" />\r\n\r\n    <div class=\"column is-two-thirds\">\r\n      <router-link\r\n        v-if=\"canEdit\"\r\n        :to=\"`/posts/${post.id}/edit`\"\r\n        class=\"button is-link is-rounded\"\r\n        data-test=\"can-edit\"\r\n      >\r\n        Edit\r\n      </router-link>\r\n      <h1>{{ post.title }}</h1>\r\n      <div v-html=\"post.html\" />\r\n    </div>\r\n\r\n    <div class=\"column\" />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport { useRoute } from 'vue-router'\r\nimport { useStore } from '../store'\r\n\r\nexport default defineComponent({\r\n  async setup(props) {\r\n    const store = useStore()\r\n    const id = useRoute().params.id as string\r\n\r\n    if (!store.getState().posts.loaded) {\r\n      await store.fetchPosts()\r\n    }\r\n\r\n    const post = store.getState().posts.all.get(id)\r\n\r\n    if (!post) {\r\n      throw Error('Post was not found.')\r\n    }\r\n\r\n    const canEdit = post.authorId === store.getState().authors.currentUserId\r\n\r\n    return {\r\n      post,\r\n      canEdit\r\n    }\r\n  }\r\n});\r\n</script>\r\n","\r\nimport { defineComponent } from 'vue';\r\nimport { useRoute } from 'vue-router'\r\nimport { useStore } from '../store'\r\n\r\nexport default defineComponent({\r\n  async setup(props) {\r\n    const store = useStore()\r\n    const id = useRoute().params.id as string\r\n\r\n    if (!store.getState().posts.loaded) {\r\n      await store.fetchPosts()\r\n    }\r\n\r\n    const post = store.getState().posts.all.get(id)\r\n\r\n    if (!post) {\r\n      throw Error('Post was not found.')\r\n    }\r\n\r\n    const canEdit = post.authorId === store.getState().authors.currentUserId\r\n\r\n    return {\r\n      post,\r\n      canEdit\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./PostViewer.vue?vue&type=template&id=265beb24\"\nimport script from \"./PostViewer.vue?vue&type=script&lang=ts\"\nexport * from \"./PostViewer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent } from 'vue';\r\nimport PostViewer from './PostViewer.vue'\r\nimport Spinner from './Spinner.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostViewer,\r\n    Spinner\r\n  }\r\n});\r\n","import { render } from \"./ShowPost.vue?vue&type=template&id=7e0c4232\"\nimport script from \"./ShowPost.vue?vue&type=script&lang=ts\"\nexport * from \"./ShowPost.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n  <suspense>\r\n    <template #default>\r\n      <post-editor />\r\n    </template>\r\n\r\n    <template #fallback>\r\n      <spinner />\r\n    </template>\r\n  </suspense>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport PostEditor from './PostEditor.vue'\r\nimport Spinner from './Spinner.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostEditor,\r\n    Spinner\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <post-writer \r\n    :post=\"post\" \r\n    @save=\"save\"\r\n  />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from '../store'\r\nimport { Post } from '../mocks';\r\nimport PostWriter from './PostWriter.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostWriter\r\n  },\r\n\r\n  async setup(props) {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const id = useRoute().params.id as string\r\n\r\n    if (!store.getState().posts.loaded) {\r\n      await store.fetchPosts()\r\n    }\r\n\r\n    const post = store.getState().posts.all.get(id)\r\n\r\n    if (!post) {\r\n      throw Error('Post was not found.')\r\n    }\r\n\r\n    if (post.authorId !== store.getState().authors.currentUserId) {\r\n      router.push('/')\r\n    }\r\n\r\n    const save = async (post: Post) => {\r\n      await store.updatePost(post)\r\n      router.push('/')\r\n    }\r\n\r\n    return {\r\n      post,\r\n      save\r\n    }\r\n  }\r\n});\r\n</script>\r\n","\r\nimport { defineComponent } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from '../store'\r\nimport { Post } from '../mocks';\r\nimport PostWriter from './PostWriter.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostWriter\r\n  },\r\n\r\n  async setup(props) {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const id = useRoute().params.id as string\r\n\r\n    if (!store.getState().posts.loaded) {\r\n      await store.fetchPosts()\r\n    }\r\n\r\n    const post = store.getState().posts.all.get(id)\r\n\r\n    if (!post) {\r\n      throw Error('Post was not found.')\r\n    }\r\n\r\n    if (post.authorId !== store.getState().authors.currentUserId) {\r\n      router.push('/')\r\n    }\r\n\r\n    const save = async (post: Post) => {\r\n      await store.updatePost(post)\r\n      router.push('/')\r\n    }\r\n\r\n    return {\r\n      post,\r\n      save\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./PostEditor.vue?vue&type=template&id=1148ba80\"\nimport script from \"./PostEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./PostEditor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent } from 'vue';\r\nimport PostEditor from './PostEditor.vue'\r\nimport Spinner from './Spinner.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PostEditor,\r\n    Spinner\r\n  }\r\n});\r\n","import { render } from \"./EditPost.vue?vue&type=template&id=1c067974\"\nimport script from \"./EditPost.vue?vue&type=script&lang=ts\"\nexport * from \"./EditPost.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import {\r\n  createRouter,\r\n  createWebHistory\r\n} from 'vue-router'\r\n\r\nimport Home from './components/Home.vue'\r\nimport NewPost from './components/NewPost.vue'\r\nimport ShowPost from './components/ShowPost.vue'\r\nimport EditPost from './components/EditPost.vue'\r\nimport { Store } from './store'\r\n\r\nexport function routerWithStore(store: Store) {\r\n  const router = createRouter({\r\n    history: createWebHistory(process.env.NODE_ENV === 'production' ? '/vuejs-composition-api-course' : undefined),\r\n    routes: [\r\n      {\r\n        path: '/',\r\n        component: Home\r\n      },\r\n      {\r\n        path: '/posts/:id/edit',\r\n        component: EditPost,\r\n        meta: {\r\n          requiresAuth: true\r\n        }\r\n      },\r\n      {\r\n        path: '/posts/:id',\r\n        component: ShowPost\r\n      },\r\n      {\r\n        path: '/posts/new',\r\n        component: NewPost,\r\n        meta: {\r\n          requiresAuth: true\r\n        }\r\n      }\r\n    ]\r\n  })\r\n\r\n  router.beforeEach((to, from, next) => {\r\n    const auth = !!store.getState().authors.currentUserId\r\n\r\n    if (!to.meta.requiresAuth) {\r\n      next()\r\n      return\r\n    }\r\n\r\n    if (to.meta.requiresAuth && auth) {\r\n      next()\r\n    } else {\r\n      next({\r\n        path: '/'\r\n      })\r\n    }\r\n  })\r\n\r\n  return router\r\n}","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport axios from 'axios'\r\nimport { today, thisWeek, thisMonth, demoData, Post } from './mocks'\r\nimport { routerWithStore } from './router'\r\nimport random from 'lodash/random'\r\nimport 'highlight.js/styles/atom-one-dark.css'\r\nimport { store, storeKey, User, Author } from './store'\r\n\r\nfunction delay() {\r\n  return new Promise(res => {\r\n    setTimeout(res, 500)\r\n  })\r\n}\r\n\r\n// @ts-ignore\r\naxios.get = async (url: string) => {\r\n  if (url === '/posts') {\r\n    await delay()\r\n    return Promise.resolve({\r\n      data: [today, thisWeek, thisMonth, ...demoData]\r\n    })\r\n  }\r\n}\r\n\r\n// @ts-ignore\r\naxios.post = async (url: string, payload: any) => {\r\n  if (url === '/posts') {\r\n    const id = random(100, 10000)\r\n    await delay()\r\n    const post: Post = {\r\n      ...payload,\r\n      id: id.toString(),\r\n      title: payload.title,\r\n      created: payload.created,\r\n      authorId: payload.authorId\r\n    }\r\n    return Promise.resolve<{ data: Post }>({\r\n      data: post\r\n    })\r\n  }\r\n\r\n  if (url === '/users') {\r\n    const id = random(100, 10000)\r\n    await delay()\r\n    const author: Author = {\r\n      id: id.toString(),\r\n      username: payload.username\r\n    }\r\n    return Promise.resolve({\r\n      data: author\r\n    })\r\n  }\r\n\r\n  if (url === '/sign_in') {\r\n    if (payload.username !== 'user123' || payload.password !== 'pass42') {\r\n      return\r\n    }\r\n\r\n    await delay()\r\n    const author: Author = {\r\n      id: '1',\r\n      username: payload.username\r\n    }\r\n    return Promise.resolve({\r\n      data: author\r\n    })\r\n  }\r\n}\r\n\r\n// @ts-ignore\r\naxios.put = async (url: string, payload: any) => {\r\n  if (url === '/posts') {\r\n    await delay()\r\n    const post: Post = {\r\n      ...payload,\r\n      title: payload.title,\r\n      created: payload.created,\r\n      authorId: payload.authorId\r\n    }\r\n    return Promise.resolve<{ data: Post }>({\r\n      data: post\r\n    })\r\n  }\r\n}\r\n\r\n\r\nconst app = createApp(App)\r\nconst router = routerWithStore(store)\r\napp.use(router)\r\napp.use(store)\r\n\r\napp.mount('#app')\r\n"],"sourceRoot":""}